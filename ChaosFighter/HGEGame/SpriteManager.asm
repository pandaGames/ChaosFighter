; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\MyCodes\ChaosFighter\trunk\ChaosFighter\HGEGame\HGEFramework\SpriteManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::list<CSprite *,std::allocator<CSprite *> >
PUBLIC	??0CSpriteManager@@QAE@PAVCGame@@@Z		; CSpriteManager::CSpriteManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CSpriteManager@@QAE@PAVCGame@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pGame$ = 8						; size = 4
??0CSpriteManager@@QAE@PAVCGame@@@Z PROC		; CSpriteManager::CSpriteManager, COMDAT
; _this$ = ecx
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\hgeframework\spritemanager.cpp
; Line 5
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::list<CSprite *,std::allocator<CSprite *> >
; Line 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pGame$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 7
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CSpriteManager@@QAE@PAVCGame@@@Z ENDP		; CSpriteManager::CSpriteManager
_TEXT	ENDS
PUBLIC	??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::~list<CSprite *,std::allocator<CSprite *> >
PUBLIC	??1CSpriteManager@@QAE@XZ			; CSpriteManager::~CSpriteManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CSpriteManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSpriteManager@@QAE@XZ PROC				; CSpriteManager::~CSpriteManager, COMDAT
; _this$ = ecx
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 12
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::~list<CSprite *,std::allocator<CSprite *> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSpriteManager@@QAE@XZ ENDP				; CSpriteManager::~CSpriteManager
_TEXT	ENDS
PUBLIC	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
PUBLIC	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
PUBLIC	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
PUBLIC	??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=
PUBLIC	?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::end
PUBLIC	?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::begin
PUBLIC	?Update@CSpriteManager@@QAEXM@Z			; CSpriteManager::Update
EXTRN	?GetVisible@CSprite@@QAE_NXZ:PROC		; CSprite::GetVisible
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Update@CSpriteManager@@QAEXM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Update@CSpriteManager@@QAEXM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@CSpriteManager@@QAEXM@Z$1
__ehfuncinfo$?Update@CSpriteManager@@QAEXM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Update@CSpriteManager@@QAEXM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Update@CSpriteManager@@QAEXM@Z
_TEXT	SEGMENT
tv139 = -296						; size = 4
tv128 = -292						; size = 4
tv65 = -292						; size = 4
$T105869 = -281						; size = 1
$T105870 = -272						; size = 12
$T105871 = -252						; size = 12
_ite$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fDeltaTime$ = 8					; size = 4
?Update@CSpriteManager@@QAEXM@Z PROC			; CSpriteManager::Update, COMDAT
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Update@CSpriteManager@@QAEXM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	lea	eax, DWORD PTR _ite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN3@Update:
; Line 17
	lea	eax, DWORD PTR $T105870[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv139[ebp]
	push	edx
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=
	mov	BYTE PTR $T105869[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T105870[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T105869[ebp]
	test	eax, eax
	je	SHORT $LN2@Update
; Line 19
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?GetVisible@CSprite@@QAE_NXZ		; CSprite::GetVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Update
; Line 21
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv128[ebp], eax
	mov	esi, esp
	push	ecx
	fld	DWORD PTR _fDeltaTime$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Update:
; Line 23
	push	0
	lea	eax, DWORD PTR $T105871[ebp]
	push	eax
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
	lea	ecx, DWORD PTR $T105871[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
; Line 24
	jmp	$LN3@Update
$LN2@Update:
; Line 25
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Update
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@Update:
	DD	1
	DD	$LN11@Update
$LN11@Update:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN9@Update
$LN9@Update:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Update@CSpriteManager@@QAEXM@Z$0:
	lea	ecx, DWORD PTR _ite$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Update@CSpriteManager@@QAEXM@Z$1:
	lea	ecx, DWORD PTR $T105870[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Update@CSpriteManager@@QAEXM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Update@CSpriteManager@@QAEXM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update@CSpriteManager@@QAEXM@Z ENDP			; CSpriteManager::Update
PUBLIC	??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::~_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
;	COMDAT xdata$x
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 133
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IE@GEOGJHNO@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@GEOGJHNO@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1IE@GEOGJHNO@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$86252 = -20					; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$86252[ebp], ecx
$LN3@Orphan_me:
; Line 177
	mov	eax, DWORD PTR __Pnext$86252[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	eax, DWORD PTR __Pnext$86252[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 178
	mov	eax, DWORD PTR __Pnext$86252[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$86252[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 180
	mov	eax, DWORD PTR __Pnext$86252[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@Orphan_me
; Line 181
	mov	esi, esp
	push	181					; 000000b5H
	push	OFFSET ??_C@_1IE@GEOGJHNO@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_me:
; Line 182
	mov	eax, DWORD PTR __Pnext$86252[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	?Render@CSpriteManager@@QAEXXZ			; CSpriteManager::Render
;	COMDAT xdata$x
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\hgeframework\spritemanager.cpp
xdata$x	SEGMENT
__unwindtable$?Render@CSpriteManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@CSpriteManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Render@CSpriteManager@@QAEXXZ$1
__ehfuncinfo$?Render@CSpriteManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Render@CSpriteManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Render@CSpriteManager@@QAEXXZ
_TEXT	SEGMENT
tv138 = -296						; size = 4
tv128 = -292						; size = 4
tv65 = -292						; size = 4
$T105919 = -281						; size = 1
$T105920 = -272						; size = 12
$T105921 = -252						; size = 12
_ite$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Render@CSpriteManager@@QAEXXZ PROC			; CSpriteManager::Render, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Render@CSpriteManager@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	lea	eax, DWORD PTR _ite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN3@Render:
; Line 30
	lea	eax, DWORD PTR $T105920[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=
	mov	BYTE PTR $T105919[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T105920[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T105919[ebp]
	test	eax, eax
	je	SHORT $LN2@Render
; Line 32
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?GetVisible@CSprite@@QAE_NXZ		; CSprite::GetVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Render
; Line 34
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv128[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Render:
; Line 36
	push	0
	lea	eax, DWORD PTR $T105921[ebp]
	push	eax
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
	lea	ecx, DWORD PTR $T105921[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
; Line 37
	jmp	$LN3@Render
$LN2@Render:
; Line 38
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Render
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@Render:
	DD	1
	DD	$LN11@Render
$LN11@Render:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN9@Render
$LN9@Render:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Render@CSpriteManager@@QAEXXZ$0:
	lea	ecx, DWORD PTR _ite$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Render@CSpriteManager@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T105920[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Render@CSpriteManager@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Render@CSpriteManager@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Render@CSpriteManager@@QAEXXZ ENDP			; CSpriteManager::Render
PUBLIC	?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ; std::list<CSprite *,std::allocator<CSprite *> >::clear
PUBLIC	??_GCSprite@@QAEPAXI@Z				; CSprite::`scalar deleting destructor'
PUBLIC	?Clear@CSpriteManager@@QAEXXZ			; CSpriteManager::Clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clear@CSpriteManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clear@CSpriteManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Clear@CSpriteManager@@QAEXXZ$1
__ehfuncinfo$?Clear@CSpriteManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Clear@CSpriteManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clear@CSpriteManager@@QAEXXZ
_TEXT	SEGMENT
tv138 = -320						; size = 4
tv95 = -316						; size = 4
tv65 = -316						; size = 4
$T105936 = -305						; size = 1
$T105937 = -296						; size = 12
$T105938 = -276						; size = 4
$T105939 = -264						; size = 4
$T105942 = -252						; size = 12
_ite$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clear@CSpriteManager@@QAEXXZ PROC			; CSpriteManager::Clear, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clear@CSpriteManager@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	lea	eax, DWORD PTR _ite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN3@Clear:
; Line 43
	lea	eax, DWORD PTR $T105937[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=
	mov	BYTE PTR $T105936[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T105937[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T105936[ebp]
	test	eax, eax
	je	$LN2@Clear
; Line 45
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Clear
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T105939[ebp], eax
	mov	ecx, DWORD PTR $T105939[ebp]
	mov	DWORD PTR $T105938[ebp], ecx
	cmp	DWORD PTR $T105938[ebp], 0
	je	SHORT $LN6@Clear
	push	1
	mov	ecx, DWORD PTR $T105938[ebp]
	call	??_GCSprite@@QAEPAXI@Z
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN1@Clear
$LN6@Clear:
	mov	DWORD PTR tv95[ebp], 0
$LN1@Clear:
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
	mov	DWORD PTR [eax], 0
; Line 46
	push	0
	lea	eax, DWORD PTR $T105942[ebp]
	push	eax
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
	lea	ecx, DWORD PTR $T105942[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
; Line 47
	jmp	$LN3@Clear
$LN2@Clear:
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ; std::list<CSprite *,std::allocator<CSprite *> >::clear
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ite$[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@Clear
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@Clear:
	DD	1
	DD	$LN13@Clear
$LN13@Clear:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN11@Clear
$LN11@Clear:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clear@CSpriteManager@@QAEXXZ$0:
	lea	ecx, DWORD PTR _ite$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Clear@CSpriteManager@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T105937[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Clear@CSpriteManager@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clear@CSpriteManager@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clear@CSpriteManager@@QAEXXZ ENDP			; CSpriteManager::Clear
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1CSprite@@QAE@XZ:PROC				; CSprite::~CSprite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCSprite@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCSprite@@QAEPAXI@Z PROC				; CSprite::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSprite@@QAE@XZ			; CSprite::~CSprite
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCSprite@@QAEPAXI@Z ENDP				; CSprite::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::push_back
PUBLIC	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
EXTRN	??0CSprite@@QAE@UD3DXVECTOR3@@KMMMM@Z:PROC	; CSprite::CSprite
EXTRN	?GetResource@CResourceManager@@QAEPBVCResource@@HQA_W@Z:PROC ; CResourceManager::GetResource
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z$0
__ehfuncinfo$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z
_TEXT	SEGMENT
tv83 = -268						; size = 4
$T105960 = -260						; size = 4
$T105961 = -248						; size = 4
_pSprite$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_vPos$ = 8						; size = 12
_resName$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
_w$ = 32						; size = 4
_h$ = 36						; size = 4
?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z PROC ; CSpriteManager::CreateSprite, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	push	212					; 000000d4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105961[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105961[ebp], 0
	je	SHORT $LN3@CreateSpri
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _w$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _resName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetResource@CResourceManager@@QAEPBVCResource@@HQA_W@Z ; CResourceManager::GetResource
	mov	eax, DWORD PTR [eax]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	ecx, DWORD PTR $T105961[ebp]
	call	??0CSprite@@QAE@UD3DXVECTOR3@@KMMMM@Z	; CSprite::CSprite
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@CreateSpri
$LN3@CreateSpri:
	mov	DWORD PTR tv83[ebp], 0
$LN4@CreateSpri:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T105960[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T105960[ebp]
	mov	DWORD PTR _pSprite$[ebp], ecx
; Line 54
	lea	eax, DWORD PTR _pSprite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::push_back
; Line 55
	mov	eax, DWORD PTR _pSprite$[ebp]
; Line 56
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CreateSpri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN10@CreateSpri:
	DD	2
	DD	$LN9@CreateSpri
$LN9@CreateSpri:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@CreateSpri
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN7@CreateSpri
$LN7@CreateSpri:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN6@CreateSpri:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z$0:
	mov	eax, DWORD PTR $T105961[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ENDP ; CSpriteManager::CreateSprite
PUBLIC	?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z ; CSpriteManager::CreateAnimSprite
EXTRN	??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z:PROC ; CAnimSprite::CAnimSprite
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z$0
__ehfuncinfo$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z
_TEXT	SEGMENT
tv86 = -280						; size = 4
$T105978 = -272						; size = 4
$T105979 = -260						; size = 4
$T105982 = -248						; size = 4
_pAnimSpr$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_vPos$ = 8						; size = 12
_resName$ = 20						; size = 4
_nFrames$ = 24						; size = 4
_FPS$ = 28						; size = 4
_x$ = 32						; size = 4
_y$ = 36						; size = 4
_w$ = 40						; size = 4
_h$ = 44						; size = 4
_isPlay$ = 48						; size = 1
?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z PROC ; CSpriteManager::CreateAnimSprite, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	push	384					; 00000180H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105979[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105979[ebp], 0
	je	SHORT $LN3@CreateAnim
	movzx	eax, BYTE PTR _isPlay$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _w$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _FPS$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _nFrames$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resName$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetResource@CResourceManager@@QAEPBVCResource@@HQA_W@Z ; CResourceManager::GetResource
	mov	edx, DWORD PTR [eax]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR $T105979[ebp]
	call	??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z ; CAnimSprite::CAnimSprite
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN4@CreateAnim
$LN3@CreateAnim:
	mov	DWORD PTR tv86[ebp], 0
$LN4@CreateAnim:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T105978[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T105978[ebp]
	mov	DWORD PTR _pAnimSpr$[ebp], eax
; Line 61
	mov	eax, DWORD PTR _pAnimSpr$[ebp]
	mov	DWORD PTR $T105982[ebp], eax
	lea	ecx, DWORD PTR $T105982[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::push_back
; Line 62
	mov	eax, DWORD PTR _pAnimSpr$[ebp]
; Line 63
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@CreateAnim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
$LN9@CreateAnim:
	DD	1
	DD	$LN8@CreateAnim
$LN8@CreateAnim:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@CreateAnim
$LN6@CreateAnim:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z$0:
	mov	eax, DWORD PTR $T105979[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z ENDP ; CSpriteManager::CreateAnimSprite
PUBLIC	??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_List_val<CSprite *,std::allocator<CSprite *> >
PUBLIC	??0?$allocator@PAVCSprite@@@std@@QAE@XZ		; std::allocator<CSprite *>::allocator<CSprite *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T105995 = -212						; size = 4
_this$ = -8						; size = 4
??0?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::list<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\list
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T105995[ebp], esp
	call	??0?$allocator@PAVCSprite@@@std@@QAE@XZ	; std::allocator<CSprite *>::allocator<CSprite *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_List_val<CSprite *,std::allocator<CSprite *> >
; Line 608
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::list<CSprite *,std::allocator<CSprite *> >
_TEXT	ENDS
PUBLIC	??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_val<CSprite *,std::allocator<CSprite *> >::~_List_val<CSprite *,std::allocator<CSprite *> >
PUBLIC	?_Tidy@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ; std::list<CSprite *,std::allocator<CSprite *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::~list<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; Line 769
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 770
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ; std::list<CSprite *,std::allocator<CSprite *> >::_Tidy
; Line 771
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_val<CSprite *,std::allocator<CSprite *> >::~_List_val<CSprite *,std::allocator<CSprite *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_val<CSprite *,std::allocator<CSprite *> >::~_List_val<CSprite *,std::allocator<CSprite *> >
__ehhandler$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::~list<CSprite *,std::allocator<CSprite *> >
PUBLIC	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
PUBLIC	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T106009 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T106009[ebp], 0
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
	mov	ecx, DWORD PTR $T106009[ebp]
	or	ecx, 1
	mov	DWORD PTR $T106009[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T106014 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T106014[ebp], 0
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
	mov	eax, DWORD PTR $T106014[ebp]
	or	eax, 1
	mov	DWORD PTR $T106014[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::end
_TEXT	ENDS
PUBLIC	?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Insert
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z$0
__ehfuncinfo$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z
_TEXT	SEGMENT
tv93 = -260						; size = 4
tv90 = -256						; size = 4
tv94 = -252						; size = 4
$T106018 = -244						; size = 4
$T106019 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z PROC ; std::list<CSprite *,std::allocator<CSprite *> >::push_back, COMDAT
; _this$ = ecx
; Line 926
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 927
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T106019[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@XZ ; std::list<CSprite *,std::allocator<CSprite *> >::end
	mov	DWORD PTR tv94[ebp], eax
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv90[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T106018[ebp], esp
	mov	eax, DWORD PTR tv90[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Insert
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T106019[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
; Line 928
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z$0:
	lea	ecx, DWORD PTR $T106019[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXABQAVCSprite@@@Z ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::push_back
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>,std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
PUBLIC	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
PUBLIC	?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnode$ = -32						; size = 4
__Pnext$ = -20						; size = 4
_this$ = -8						; size = 4
?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::clear, COMDAT
; _this$ = ecx
; Line 1096
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1098
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Orphan_ptr
; Line 1102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 1103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1105
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	jmp	SHORT $LN3@clear
$LN2@clear:
; Line 1107
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear
; Line 1109
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], ecx
; Line 1111
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>,std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
	add	esp, 8
; Line 1112
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate
; Line 1113
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 1114
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::clear
_TEXT	ENDS
PUBLIC	??D?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEABQAVCSprite@@XZ ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEABQAVCSprite@@XZ ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEAAPAVCSprite@@XZ ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
PUBLIC	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T106036 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T106036[ebp], 0
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 377
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
; Line 378
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T106036[ebp]
	or	ecx, 1
	mov	DWORD PTR $T106036[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T106036[ebp]
	and	eax, 1
	je	$LN5@operator
	and	DWORD PTR $T106036[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
$LN5@operator:
	ret	0
__ehhandler$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 300
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 117
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@operator@2
; Line 123
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
$LN1@operator@2:
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$86242 = -44					; size = 4
__Parent_proxy$86240 = -32				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	cmp	DWORD PTR __Parent$[ebp], 0
	je	SHORT $LN3@Adopt
; Line 139
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$86240[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$86240[ebp]
	je	SHORT $LN3@Adopt
; Line 144
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$86242[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$86240[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 147
	mov	eax, DWORD PTR __Parent_proxy$86240[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$86240[ebp]
	mov	DWORD PTR [eax], ecx
; Line 149
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$86242[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Adopt:
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@Adopt:
	DD	1
	DD	$LN8@Adopt
$LN8@Adopt:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@Adopt
$LN6@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$86242[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
PUBLIC	?_Incsize@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXI@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Incsize
PUBLIC	?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Buynode
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_Mynode
PUBLIC	??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
;	COMDAT ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
; File d:\program files\microsoft visual studio 10.0\vc\include\list
CONST	SEGMENT
??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z$0
__ehfuncinfo$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z
_TEXT	SEGMENT
__Newnode$ = -44					; size = 4
__Pnode$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Val$ = 20						; size = 4
?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z PROC ; std::list<CSprite *,std::allocator<CSprite *> >::_Insert, COMDAT
; _this$ = ecx
; Line 967
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 969
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN1@Insert
; Line 970
	mov	esi, esp
	push	970					; 000003caH
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Insert:
; Line 973
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 975
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 976
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXI@Z ; std::list<CSprite *,std::allocator<CSprite *> >::_Incsize
; Line 977
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 978
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 979
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@2@ABQAVCSprite@@@Z ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::_Insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::_Tidy, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\list
; Line 1496
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ; std::list<CSprite *,std::allocator<CSprite *> >::clear
; Line 1498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXXZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z PROC ; std::list<CSprite *,std::allocator<CSprite *> >::_Orphan_ptr, COMDAT
; _this$ = ecx
; Line 1527
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1528
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1529
	mov	esi, esp
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1530
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:
; Line 1531
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr
; Line 1533
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:
; Line 1534
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1535
	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:
; Line 1537
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1538
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ptr:
; Line 1539
	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:
; Line 1540
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
PUBLIC	??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocate
PUBLIC	??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::_List_nod<CSprite *,std::allocator<CSprite *> >
PUBLIC	??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z	; std::allocator<CSprite *>::allocator<CSprite *>
;	COMDAT xdata$x
; File d:\program files\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
_TEXT	SEGMENT
$T106110 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_List_val<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; Line 493
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T106110[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z ; std::allocator<CSprite *>::allocator<CSprite *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::_List_nod<CSprite *,std::allocator<CSprite *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 495
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 497
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 498
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >
__ehhandler$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_List_val<CSprite *,std::allocator<CSprite *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::~_List_val<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; Line 501
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 502
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate
; Line 503
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >
__ehhandler$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::~_List_val<CSprite *,std::allocator<CSprite *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode, COMDAT
; Line 560
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 561
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 562
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode, COMDAT
; Line 565
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 566
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 567
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVCSprite@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@PAVCSprite@@@std@@QAE@XZ PROC		; std::allocator<CSprite *>::allocator<CSprite *>, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVCSprite@@@std@@QAE@XZ ENDP		; std::allocator<CSprite *>::allocator<CSprite *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\list
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
_TEXT	ENDS
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
; Line 371
	mov	eax, DWORD PTR _this$[ebp]
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
_TEXT	ENDS
PUBLIC	?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Myval
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OK@PMPKCDEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReportW:PROC
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@PMPKCDEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1OK@PMPKCDEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' ', 00H
	DB	'*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEABQAVCSprite@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEABQAVCSprite@@XZ PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LN2@operator@3
$LN1@operator@3:
; Line 207
	mov	esi, esp
	push	207					; 000000cfH
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@3
	xor	ecx, ecx
	jne	SHORT $LN6@operator@3
$LN5@operator@3:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator@3
	int	3
$LN6@operator@3:
	mov	esi, esp
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1OK@PMPKCDEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@3:
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Myval
	add	esp, 4
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBEABQAVCSprite@@XZ ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator*
_TEXT	ENDS
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OM@EOIMNANC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OM@EOIMNANC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1OM@EOIMNANC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' ', 00H
	DB	'*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator==, COMDAT
; _this$ = ecx
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 284
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN2@operator@4
$LN1@operator@4:
; Line 286
	mov	esi, esp
	push	286					; 0000011eH
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 287
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@4
	xor	ecx, ecx
	jne	SHORT $LN6@operator@4
$LN5@operator@4:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator@4
	int	3
$LN6@operator@4:
	mov	esi, esp
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1OM@EOIMNANC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@4:
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al
; Line 296
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator==
_TEXT	ENDS
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEIXZ ; std::list<CSprite *,std::allocator<CSprite *> >::max_size
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Incsize@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXI@Z PROC ; std::list<CSprite *,std::allocator<CSprite *> >::_Incsize, COMDAT
; _this$ = ecx
; Line 1519
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1520
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEIXZ ; std::list<CSprite *,std::allocator<CSprite *> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+8]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize
; Line 1521
	mov	esi, esp
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Incsize:
; Line 1522
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN3@Incsize:
; Line 1523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEXI@Z ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::_Incsize
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVCSprite@@@std@@PAVCSprite@@ABQAV3@@std@@YAXAAV?$allocator@PAVCSprite@@@0@PAPAVCSprite@@ABQAV2@@Z ; std::_Cons_val<std::allocator<CSprite *>,CSprite *,CSprite * const &>
PUBLIC	??$addressof@PAVCSprite@@@std@@YAPAPAVCSprite@@AAPAV1@@Z ; std::addressof<CSprite *>
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$0
__unwindtable$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$2
__ehfuncinfo$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z
_TEXT	SEGMENT
tv134 = -240						; size = 4
tv133 = -236						; size = 4
tv132 = -236						; size = 4
tv131 = -236						; size = 4
__Pnode$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Buynode, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 508
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 510
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 511
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 512
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 513
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	push	ecx
	call	??$addressof@PAVCSprite@@@std@@YAPAPAVCSprite@@AAPAV1@@Z ; std::addressof<CSprite *>
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	push	ecx
	call	??$_Cons_val@V?$allocator@PAVCSprite@@@std@@PAVCSprite@@ABQAV3@@std@@YAXAAV?$allocator@PAVCSprite@@@0@PAPAVCSprite@@ABQAV2@@Z ; std::_Cons_val<std::allocator<CSprite *>,CSprite *,CSprite * const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode
__catch$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$0:
; Line 515
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::deallocate
; Line 516
	push	0
	push	0
	call	__CxxThrowException@8
; Line 517
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$1
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z$1:
; Line 519
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
; Line 520
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@0ABQAVCSprite@@@Z ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Buynode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z PROC ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Myval, COMDAT
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 571
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 572
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myval@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAVCSprite@@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ENDP ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Myval
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
PUBLIC	??$?0PAVCSprite@@@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCSprite@@@1@@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node><CSprite *>
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
_TEXT	SEGMENT
$T106170 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z PROC ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::_List_nod<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; Line 444
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0PAVCSprite@@@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCSprite@@@1@@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node><CSprite *>
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z ; std::allocator<CSprite *>::allocator<CSprite *>
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Line 447
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 448
	lea	ecx, DWORD PTR $T106170[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 449
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 450
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@List_nod:
	DD	1
	DD	$LN6@List_nod
$LN6@List_nod:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@List_nod
$LN4@List_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@V?$allocator@PAVCSprite@@@1@@Z ENDP ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::_List_nod<CSprite *,std::allocator<CSprite *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
;	COMDAT xdata$x
; File d:\program files\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >, COMDAT
; _this$ = ecx
; Line 453
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Line 456
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 457
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 458
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 460
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@List_nod@2:
	DD	1
	DD	$LN6@List_nod@2
$LN6@List_nod@2:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@List_nod@2
$LN4@List_nod@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<CSprite *,std::allocator<CSprite *> >::~_List_nod<CSprite *,std::allocator<CSprite *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z PROC	; std::allocator<CSprite *>::allocator<CSprite *>, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVCSprite@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<CSprite *>::allocator<CSprite *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\list
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >
_TEXT	ENDS
PUBLIC	??_C@_1OM@OOHBDJBH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1OM@OOHBDJBH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1OM@OOHBDJBH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'C', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'p', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' ', 00H
	DB	'*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LN2@operator@5
$LN1@operator@5:
; Line 227
	mov	esi, esp
	push	227					; 000000e3H
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 228
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@5
	xor	ecx, ecx
	jne	SHORT $LN6@operator@5
$LN5@operator@5:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator@5
	int	3
$LN6@operator@5:
	mov	esi, esp
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1HM@OCEGBIKA@?$AAd?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1OM@OOHBDJBH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@5:
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@PAU342@@Z ; std::_List_val<CSprite *,std::allocator<CSprite *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
; Line 239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCSprite@@@std@@QBEIXZ	; std::allocator<CSprite *>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEIXZ PROC ; std::list<CSprite *,std::allocator<CSprite *> >::max_size, COMDAT
; _this$ = ecx
; Line 881
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 882
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?max_size@?$allocator@PAVCSprite@@@std@@QBEIXZ ; std::allocator<CSprite *>::max_size
; Line 883
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@QBEIXZ ENDP ; std::list<CSprite *,std::allocator<CSprite *> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 42
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 43
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@PBV?$_List_val@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<CSprite *,std::allocator<CSprite *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVCSprite@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,CSprite *,int,CSprite * const *,CSprite * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVCSprite@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@PAVCSprite@@@std@@QBEIXZ PROC	; std::allocator<CSprite *>::max_size, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVCSprite@@@std@@QBEIXZ ENDP	; std::allocator<CSprite *>::max_size
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>,std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::destroy
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>,std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$addressof@PAVCSprite@@@std@@YAPAPAVCSprite@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVCSprite@@@std@@YAPAPAVCSprite@@AAPAV1@@Z PROC ; std::addressof<CSprite *>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAVCSprite@@@std@@YAPAPAVCSprite@@AAPAV1@@Z ENDP ; std::addressof<CSprite *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVCSprite@@@std@@QAEXPAPAVCSprite@@ABQAV3@@Z ; std::allocator<CSprite *>::construct
PUBLIC	??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z ; std::forward<CSprite * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVCSprite@@@std@@PAVCSprite@@ABQAV3@@std@@YAXAAV?$allocator@PAVCSprite@@@0@PAPAVCSprite@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVCSprite@@@std@@PAVCSprite@@ABQAV3@@std@@YAXAAV?$allocator@PAVCSprite@@@0@PAPAVCSprite@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<CSprite *>,CSprite *,CSprite * const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z ; std::forward<CSprite * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVCSprite@@@std@@QAEXPAPAVCSprite@@ABQAV3@@Z ; std::allocator<CSprite *>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVCSprite@@@std@@PAVCSprite@@ABQAV3@@std@@YAXAAV?$allocator@PAVCSprite@@@0@PAPAVCSprite@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<CSprite *>,CSprite *,CSprite * const &>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0PAVCSprite@@@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCSprite@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0PAVCSprite@@@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCSprite@@@1@@Z PROC ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node><CSprite *>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVCSprite@@@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCSprite@@@1@@Z ENDP ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node><CSprite *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T106248 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T106248[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T106248[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File d:\program files\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T106257 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T106257[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T106257[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z ; std::_Construct<CSprite *,CSprite * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@PAVCSprite@@@std@@QAEXPAPAVCSprite@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVCSprite@@@std@@QAEXPAPAVCSprite@@ABQAV3@@Z PROC ; std::allocator<CSprite *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z ; std::_Construct<CSprite *,CSprite * const &>
	add	esp, 8
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVCSprite@@@std@@QAEXPAPAVCSprite@@ABQAV3@@Z ENDP ; std::allocator<CSprite *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
	add	esp, 4
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T106267 = -236						; size = 4
$T106268 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T106268[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T106268[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T106268[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T106268[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T106267[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T106268[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File d:\program files\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z PROC ; std::forward<CSprite * const &>, COMDAT
; File d:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z ENDP ; std::forward<CSprite * const &>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z$0
__ehfuncinfo$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T106290 = -236						; size = 4
$T106291 = -224						; size = 4
__Vptr$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z PROC ; std::_Construct<CSprite *,CSprite * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T106291[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T106291[ebp], 0
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@ABQAVCSprite@@@std@@YAABQAVCSprite@@ABQAV1@@Z ; std::forward<CSprite * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T106291[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T106291[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T106290[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T106291[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVCSprite@@ABQAV1@@std@@YAXPAPAVCSprite@@ABQAV1@@Z ENDP ; std::_Construct<CSprite *,CSprite * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVCSprite@@V?$allocator@PAVCSprite@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<CSprite *,std::allocator<CSprite *> >::_Node>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
END
