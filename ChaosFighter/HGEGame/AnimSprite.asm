; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\毕业设计\项目\ChaosFighter\HGEGame\HGEFramework\AnimSprite.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1hgeAnimation@@QAE@XZ				; hgeAnimation::~hgeAnimation
PUBLIC	??_7CAnimSprite@@6B@				; CAnimSprite::`vftable'
PUBLIC	??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z	; CAnimSprite::CAnimSprite
PUBLIC	??_R4CAnimSprite@@6B@				; CAnimSprite::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAnimSprite@@@8				; CAnimSprite `RTTI Type Descriptor'
PUBLIC	??_R3CAnimSprite@@8				; CAnimSprite::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAnimSprite@@8				; CAnimSprite::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAnimSprite@@8			; CAnimSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CSprite@@8			; CSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSprite@@@8				; CSprite `RTTI Type Descriptor'
PUBLIC	??_R3CSprite@@8					; CSprite::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSprite@@8					; CSprite::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@hgeSprite@@8			; hgeSprite::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVhgeSprite@@@8				; hgeSprite `RTTI Type Descriptor'
PUBLIC	??_R3hgeSprite@@8				; hgeSprite::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2hgeSprite@@8				; hgeSprite::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@hgeSprite@@8			; hgeSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@hgeSprite@@8			; hgeSprite::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R1NE@?0A@EA@hgeAnimation@@8			; hgeAnimation::`RTTI Base Class Descriptor at (212,-1,0,64)'
PUBLIC	??_R0?AVhgeAnimation@@@8			; hgeAnimation `RTTI Type Descriptor'
PUBLIC	??_R3hgeAnimation@@8				; hgeAnimation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2hgeAnimation@@8				; hgeAnimation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@hgeAnimation@@8			; hgeAnimation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1NE@?0A@EC@hgeSprite@@8			; hgeSprite::`RTTI Base Class Descriptor at (212,-1,0,66)'
PUBLIC	?RenderFunc@CAnimSprite@@UAEXXZ			; CAnimSprite::RenderFunc
PUBLIC	?UpdateFunc@CAnimSprite@@UAEXM@Z		; CAnimSprite::UpdateFunc
EXTRN	??1CSprite@@QAE@XZ:PROC				; CSprite::~CSprite
EXTRN	?Play@hgeAnimation@@QAEXXZ:PROC			; hgeAnimation::Play
EXTRN	??0hgeAnimation@@QAE@KHMMMMM@Z:PROC		; hgeAnimation::hgeAnimation
EXTRN	??0CSprite@@QAE@UD3DXVECTOR3@@KMMMM@Z:PROC	; CSprite::CSprite
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1NE@?0A@EC@hgeSprite@@8
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
rdata$r	SEGMENT
??_R1NE@?0A@EC@hgeSprite@@8 DD FLAT:??_R0?AVhgeSprite@@@8 ; hgeSprite::`RTTI Base Class Descriptor at (212,-1,0,66)'
	DD	00H
	DD	0d4H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@hgeAnimation@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@hgeAnimation@@8 DD FLAT:??_R0?AVhgeAnimation@@@8 ; hgeAnimation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3hgeAnimation@@8
rdata$r	ENDS
;	COMDAT ??_R2hgeAnimation@@8
rdata$r	SEGMENT
??_R2hgeAnimation@@8 DD FLAT:??_R1A@?0A@EA@hgeAnimation@@8 ; hgeAnimation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R3hgeAnimation@@8
rdata$r	SEGMENT
??_R3hgeAnimation@@8 DD 00H				; hgeAnimation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2hgeAnimation@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVhgeAnimation@@@8
_DATA	SEGMENT
??_R0?AVhgeAnimation@@@8 DD FLAT:??_7type_info@@6B@	; hgeAnimation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVhgeAnimation@@', 00H
_DATA	ENDS
;	COMDAT ??_R1NE@?0A@EA@hgeAnimation@@8
rdata$r	SEGMENT
??_R1NE@?0A@EA@hgeAnimation@@8 DD FLAT:??_R0?AVhgeAnimation@@@8 ; hgeAnimation::`RTTI Base Class Descriptor at (212,-1,0,64)'
	DD	01H
	DD	0d4H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3hgeAnimation@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@hgeSprite@@8
rdata$r	SEGMENT
??_R13?0A@EC@hgeSprite@@8 DD FLAT:??_R0?AVhgeSprite@@@8	; hgeSprite::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@hgeSprite@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@hgeSprite@@8 DD FLAT:??_R0?AVhgeSprite@@@8 ; hgeSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R2hgeSprite@@8
rdata$r	SEGMENT
??_R2hgeSprite@@8 DD FLAT:??_R1A@?0A@EA@hgeSprite@@8	; hgeSprite::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3hgeSprite@@8
rdata$r	SEGMENT
??_R3hgeSprite@@8 DD 00H				; hgeSprite::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVhgeSprite@@@8
_DATA	SEGMENT
??_R0?AVhgeSprite@@@8 DD FLAT:??_7type_info@@6B@	; hgeSprite `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVhgeSprite@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@hgeSprite@@8
rdata$r	SEGMENT
??_R13?0A@EA@hgeSprite@@8 DD FLAT:??_R0?AVhgeSprite@@@8	; hgeSprite::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R2CSprite@@8
rdata$r	SEGMENT
??_R2CSprite@@8 DD FLAT:??_R1A@?0A@EA@CSprite@@8	; CSprite::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R3CSprite@@8
rdata$r	SEGMENT
??_R3CSprite@@8 DD 00H					; CSprite::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSprite@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSprite@@@8
_DATA	SEGMENT
??_R0?AVCSprite@@@8 DD FLAT:??_7type_info@@6B@		; CSprite `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSprite@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CSprite@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSprite@@8 DD FLAT:??_R0?AVCSprite@@@8	; CSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSprite@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAnimSprite@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAnimSprite@@8 DD FLAT:??_R0?AVCAnimSprite@@@8 ; CAnimSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAnimSprite@@8
rdata$r	ENDS
;	COMDAT ??_R2CAnimSprite@@8
rdata$r	SEGMENT
??_R2CAnimSprite@@8 DD FLAT:??_R1A@?0A@EA@CAnimSprite@@8 ; CAnimSprite::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSprite@@8
	DD	FLAT:??_R13?0A@EC@hgeSprite@@8
	DD	FLAT:??_R1NE@?0A@EA@hgeAnimation@@8
	DD	FLAT:??_R1NE@?0A@EC@hgeSprite@@8
rdata$r	ENDS
;	COMDAT ??_R3CAnimSprite@@8
rdata$r	SEGMENT
??_R3CAnimSprite@@8 DD 00H				; CAnimSprite::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	FLAT:??_R2CAnimSprite@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAnimSprite@@@8
_DATA	SEGMENT
??_R0?AVCAnimSprite@@@8 DD FLAT:??_7type_info@@6B@	; CAnimSprite `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAnimSprite@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CAnimSprite@@6B@
rdata$r	SEGMENT
??_R4CAnimSprite@@6B@ DD 00H				; CAnimSprite::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAnimSprite@@@8
	DD	FLAT:??_R3CAnimSprite@@8
rdata$r	ENDS
;	COMDAT ??_7CAnimSprite@@6B@
CONST	SEGMENT
??_7CAnimSprite@@6B@ DD FLAT:??_R4CAnimSprite@@6B@	; CAnimSprite::`vftable'
	DD	FLAT:?RenderFunc@CAnimSprite@@UAEXXZ
	DD	FLAT:?UpdateFunc@CAnimSprite@@UAEXM@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z$1
__ehfuncinfo$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_vPos$ = 8						; size = 12
_tex$ = 20						; size = 4
_nframes$ = 24						; size = 4
_FPS$ = 28						; size = 4
_x$ = 32						; size = 4
_y$ = 36						; size = 4
_w$ = 40						; size = 4
_h$ = 44						; size = 4
_isPlay$ = 48						; size = 1
??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z PROC	; CAnimSprite::CAnimSprite, COMDAT
; _this$ = ecx
; Line 13
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _w$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _tex$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSprite@@QAE@UD3DXVECTOR3@@KMMMM@Z	; CSprite::CSprite
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _w$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _FPS$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _nframes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??0hgeAnimation@@QAE@KHMMMMM@Z		; hgeAnimation::hgeAnimation
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CAnimSprite@@6B@
; Line 14
	movzx	eax, BYTE PTR _isPlay$[ebp]
	test	eax, eax
	je	SHORT $LN1@CAnimSprit
; Line 16
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?Play@hgeAnimation@@QAEXXZ		; hgeAnimation::Play
$LN1@CAnimSprit:
; Line 18
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@CAnimSprit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
	npad	1
$LN9@CAnimSprit:
	DD	1
	DD	$LN8@CAnimSprit
$LN8@CAnimSprit:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@CAnimSprit
$LN6@CAnimSprit:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CSprite@@QAE@XZ			; CSprite::~CSprite
__unwindfunclet$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	jmp	??1hgeAnimation@@QAE@XZ
__ehhandler$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CAnimSprite@@QAE@UD3DXVECTOR3@@KHMMMMM_N@Z ENDP	; CAnimSprite::CAnimSprite
PUBLIC	??1hgeSprite@@QAE@XZ				; hgeSprite::~hgeSprite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1hgeAnimation@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1hgeAnimation@@QAE@XZ PROC				; hgeAnimation::~hgeAnimation, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1hgeSprite@@QAE@XZ			; hgeSprite::~hgeSprite
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1hgeAnimation@@QAE@XZ ENDP				; hgeAnimation::~hgeAnimation
_TEXT	ENDS
EXTRN	?hge@hgeSprite@@1PAVHGE@@A:DWORD		; hgeSprite::hge
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1hgeSprite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1hgeSprite@@QAE@XZ PROC				; hgeSprite::~hgeSprite, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?hge@hgeSprite@@1PAVHGE@@A ; hgeSprite::hge
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?hge@hgeSprite@@1PAVHGE@@A ; hgeSprite::hge
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1hgeSprite@@QAE@XZ ENDP				; hgeSprite::~hgeSprite
_TEXT	ENDS
PUBLIC	??1CAnimSprite@@QAE@XZ				; CAnimSprite::~CAnimSprite
;	COMDAT xdata$x
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
xdata$x	SEGMENT
__unwindtable$??1CAnimSprite@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CAnimSprite@@QAE@XZ$0
__ehfuncinfo$??1CAnimSprite@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CAnimSprite@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CAnimSprite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CAnimSprite@@QAE@XZ PROC				; CAnimSprite::~CAnimSprite, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAnimSprite@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CAnimSprite@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 22
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??1hgeAnimation@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSprite@@QAE@XZ			; CSprite::~CSprite
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CAnimSprite@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CSprite@@QAE@XZ			; CSprite::~CSprite
__ehhandler$??1CAnimSprite@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CAnimSprite@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAnimSprite@@QAE@XZ ENDP				; CAnimSprite::~CAnimSprite
EXTRN	?RenderEx@hgeSprite@@QAEXMMMMM@Z:PROC		; hgeSprite::RenderEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFunc@CAnimSprite@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RenderFunc@CAnimSprite@@UAEXXZ PROC			; CAnimSprite::RenderFunc, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [eax+184]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [ecx+184]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [edx+188]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [eax+148]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [ecx+144]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?RenderEx@hgeSprite@@QAEXMMMMM@Z	; hgeSprite::RenderEx
; Line 27
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RenderFunc@CAnimSprite@@UAEXXZ ENDP			; CAnimSprite::RenderFunc
_TEXT	ENDS
EXTRN	?Update@hgeAnimation@@QAEXM@Z:PROC		; hgeAnimation::Update
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateFunc@CAnimSprite@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fDeltaTime$ = 8					; size = 4
?UpdateFunc@CAnimSprite@@UAEXM@Z PROC			; CAnimSprite::UpdateFunc, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	push	ecx
	fld	DWORD PTR _fDeltaTime$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?Update@hgeAnimation@@QAEXM@Z		; hgeAnimation::Update
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateFunc@CAnimSprite@@UAEXM@Z ENDP			; CAnimSprite::UpdateFunc
_TEXT	ENDS
PUBLIC	?SetHotSpot@hgeSprite@@QAEXMM@Z			; hgeSprite::SetHotSpot
PUBLIC	?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z	; CAnimSprite::SetHotPos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vHotPos$ = 8						; size = 12
?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z PROC	; CAnimSprite::SetHotPos, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _vHotPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vHotPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vHotPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 168				; 000000a8H
	mov	ecx, DWORD PTR _vHotPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vHotPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vHotPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [eax+160]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [ecx+156]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetHotSpot@hgeSprite@@QAEXMM@Z		; hgeSprite::SetHotSpot
; Line 39
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetHotPos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN5@SetHotPos:
	DD	1
	DD	$LN4@SetHotPos
$LN4@SetHotPos:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@SetHotPos
$LN3@SetHotPos:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z ENDP	; CAnimSprite::SetHotPos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetHotSpot@hgeSprite@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetHotSpot@hgeSprite@@QAEXMM@Z PROC			; hgeSprite::SetHotSpot, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [eax+128]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [eax+132]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetHotSpot@hgeSprite@@QAEXMM@Z ENDP			; hgeSprite::SetHotSpot
_TEXT	ENDS
PUBLIC	?SetVisible@CAnimSprite@@QAEX_N@Z		; CAnimSprite::SetVisible
EXTRN	?SetColor@hgeSprite@@QAEXKH@Z:PROC		; hgeSprite::SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetVisible@CAnimSprite@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bVisible$ = 8						; size = 1
?SetVisible@CAnimSprite@@QAEX_N@Z PROC			; CAnimSprite::SetVisible, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bVisible$[ebp]
	mov	BYTE PTR [eax+180], cl
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+180]
	test	ecx, ecx
	je	SHORT $LN2@SetVisible
; Line 45
	push	-1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetColor@hgeSprite@@QAEXKH@Z		; hgeSprite::SetColor
; Line 47
	jmp	SHORT $LN3@SetVisible
$LN2@SetVisible:
; Line 49
	push	-1
	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetColor@hgeSprite@@QAEXKH@Z		; hgeSprite::SetColor
$LN3@SetVisible:
; Line 51
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetVisible@CAnimSprite@@QAEX_N@Z ENDP			; CAnimSprite::SetVisible
_TEXT	ENDS
PUBLIC	?SetTexture@hgeAnimation@@QAEXK@Z		; hgeAnimation::SetTexture
PUBLIC	?SetTexture@CAnimSprite@@QAEXK@Z		; CAnimSprite::SetTexture
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTexture@CAnimSprite@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tex$ = 8						; size = 4
?SetTexture@CAnimSprite@@QAEXK@Z PROC			; CAnimSprite::SetTexture, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _tex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetTexture@hgeAnimation@@QAEXK@Z	; hgeAnimation::SetTexture
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTexture@CAnimSprite@@QAEXK@Z ENDP			; CAnimSprite::SetTexture
_TEXT	ENDS
EXTRN	?SetTexture@hgeSprite@@QAEXK@Z:PROC		; hgeSprite::SetTexture
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTexture@hgeAnimation@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tex$ = 8						; size = 4
?SetTexture@hgeAnimation@@QAEXK@Z PROC			; hgeAnimation::SetTexture, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgeanim.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _tex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTexture@hgeSprite@@QAEXK@Z		; hgeSprite::SetTexture
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _tex$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hge@hgeSprite@@1PAVHGE@@A ; hgeSprite::hge
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?hge@hgeSprite@@1PAVHGE@@A ; hgeSprite::hge
	push	eax
	mov	ecx, DWORD PTR [edx+396]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTexture@hgeAnimation@@QAEXK@Z ENDP			; hgeAnimation::SetTexture
_TEXT	ENDS
PUBLIC	?SetTextureRect@hgeAnimation@@QAEXMMMM@Z	; hgeAnimation::SetTextureRect
PUBLIC	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z		; CAnimSprite::SetTextureRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTextureRect@CAnimSprite@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
?SetTextureRect@CAnimSprite@@QAEXMMMM@Z PROC		; CAnimSprite::SetTextureRect, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _w$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetTextureRect@hgeAnimation@@QAEXMMMM@Z ; hgeAnimation::SetTextureRect
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetTextureRect@CAnimSprite@@QAEXMMMM@Z ENDP		; CAnimSprite::SetTextureRect
_TEXT	ENDS
EXTRN	?SetFrame@hgeAnimation@@QAEXH@Z:PROC		; hgeAnimation::SetFrame
EXTRN	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z:PROC	; hgeSprite::SetTextureRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTextureRect@hgeAnimation@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
?SetTextureRect@hgeAnimation@@QAEXMMMM@Z PROC		; hgeAnimation::SetTextureRect, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgeanim.h
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	ecx
	fld	DWORD PTR _y2$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x2$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y1$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x1$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetTextureRect@hgeAnimation@@QAEXMMMM@Z ENDP		; hgeAnimation::SetTextureRect
_TEXT	ENDS
PUBLIC	?SetColor@CAnimSprite@@QAEXKH@Z			; CAnimSprite::SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetColor@CAnimSprite@@QAEXKH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_col$ = 8						; size = 4
_i$ = 12						; size = 4
?SetColor@CAnimSprite@@QAEXKH@Z PROC			; CAnimSprite::SetColor, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _col$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetColor@hgeSprite@@QAEXKH@Z		; hgeSprite::SetColor
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetColor@CAnimSprite@@QAEXKH@Z ENDP			; CAnimSprite::SetColor
_TEXT	ENDS
PUBLIC	?SetZ@CAnimSprite@@QAEXMH@Z			; CAnimSprite::SetZ
EXTRN	?SetZ@hgeSprite@@QAEXMH@Z:PROC			; hgeSprite::SetZ
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetZ@CAnimSprite@@QAEXMH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_z$ = 8							; size = 4
_i$ = 12						; size = 4
?SetZ@CAnimSprite@@QAEXMH@Z PROC			; CAnimSprite::SetZ, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _z$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetZ@hgeSprite@@QAEXMH@Z		; hgeSprite::SetZ
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetZ@CAnimSprite@@QAEXMH@Z ENDP			; CAnimSprite::SetZ
_TEXT	ENDS
PUBLIC	?SetBlendMode@hgeSprite@@QAEXH@Z		; hgeSprite::SetBlendMode
PUBLIC	?SetBlendMode@CAnimSprite@@QAEXH@Z		; CAnimSprite::SetBlendMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetBlendMode@CAnimSprite@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_blend$ = 8						; size = 4
?SetBlendMode@CAnimSprite@@QAEXH@Z PROC			; CAnimSprite::SetBlendMode, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _blend$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetBlendMode@hgeSprite@@QAEXH@Z	; hgeSprite::SetBlendMode
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBlendMode@CAnimSprite@@QAEXH@Z ENDP			; CAnimSprite::SetBlendMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetBlendMode@hgeSprite@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_blend$ = 8						; size = 4
?SetBlendMode@hgeSprite@@QAEXH@Z PROC			; hgeSprite::SetBlendMode, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _blend$[ebp]
	mov	DWORD PTR [eax+100], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBlendMode@hgeSprite@@QAEXH@Z ENDP			; hgeSprite::SetBlendMode
_TEXT	ENDS
PUBLIC	?GetHeight@CAnimSprite@@QAEMXZ			; CAnimSprite::GetHeight
PUBLIC	?GetWidth@CAnimSprite@@QAEMXZ			; CAnimSprite::GetWidth
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__$ArrayPad$
PUBLIC	?SetFlip@CAnimSprite@@QAEX_N00@Z		; CAnimSprite::SetFlip
EXTRN	?SetFlip@hgeSprite@@QAEX_N00@Z:PROC		; hgeSprite::SetFlip
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetFlip@CAnimSprite@@QAEX_N00@Z
_TEXT	SEGMENT
_vHotPos$ = -32						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_bX$ = 8						; size = 1
_bY$ = 12						; size = 1
_bHotSpot$ = 16						; size = 1
?SetFlip@CAnimSprite@@QAEX_N00@Z PROC			; CAnimSprite::SetFlip, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	movzx	eax, BYTE PTR _bHotSpot$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bY$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bX$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetFlip@hgeSprite@@QAEX_N00@Z		; hgeSprite::SetFlip
; Line 76
	lea	ecx, DWORD PTR _vHotPos$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 77
	movzx	eax, BYTE PTR _bHotSpot$[ebp]
	test	eax, eax
	je	$LN4@SetFlip
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 168				; 000000a8H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _vHotPos$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _vHotPos$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _vHotPos$[ebp+8], eax
; Line 80
	movzx	eax, BYTE PTR _bX$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetFlip
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetWidth@CAnimSprite@@QAEMXZ		; CAnimSprite::GetWidth
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+168]
	fadd	ST(0), ST(0)
	fsubp	ST(1), ST(0)
	mov	ecx, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [ecx+168]
	fstp	DWORD PTR _vHotPos$[ebp]
$LN3@SetFlip:
; Line 84
	movzx	eax, BYTE PTR _bY$[ebp]
	test	eax, eax
	je	SHORT $LN2@SetFlip
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHeight@CAnimSprite@@QAEMXZ		; CAnimSprite::GetHeight
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+172]
	fadd	ST(0), ST(0)
	fsubp	ST(1), ST(0)
	mov	ecx, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [ecx+172]
	fstp	DWORD PTR _vHotPos$[ebp+4]
$LN2@SetFlip:
; Line 88
	push	ecx
	fld	DWORD PTR _vHotPos$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _vHotPos$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetHotSpot@hgeSprite@@QAEXMM@Z		; hgeSprite::SetHotSpot
; Line 90
	jmp	SHORT $LN1@SetFlip
$LN4@SetFlip:
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 168				; 000000a8H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _vHotPos$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _vHotPos$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _vHotPos$[ebp+8], eax
; Line 93
	push	ecx
	fld	DWORD PTR _vHotPos$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _vHotPos$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?SetHotSpot@hgeSprite@@QAEXMM@Z		; hgeSprite::SetHotSpot
$LN1@SetFlip:
; Line 95
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetFlip
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@SetFlip:
	DD	1
	DD	$LN8@SetFlip
$LN8@SetFlip:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@SetFlip
$LN7@SetFlip:
	DB	118					; 00000076H
	DB	72					; 00000048H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?SetFlip@CAnimSprite@@QAEX_N00@Z ENDP			; CAnimSprite::SetFlip
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File d:\program files\microsoft directx sdk (june 2010)\include\d3dx9math.h
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	?GetTexture@hgeSprite@@QBEKXZ			; hgeSprite::GetTexture
PUBLIC	?GetTexture@CAnimSprite@@QAEKXZ			; CAnimSprite::GetTexture
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTexture@CAnimSprite@@QAEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTexture@CAnimSprite@@QAEKXZ PROC			; CAnimSprite::GetTexture, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetTexture@hgeSprite@@QBEKXZ		; hgeSprite::GetTexture
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTexture@CAnimSprite@@QAEKXZ ENDP			; CAnimSprite::GetTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTexture@hgeSprite@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTexture@hgeSprite@@QBEKXZ PROC			; hgeSprite::GetTexture, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTexture@hgeSprite@@QBEKXZ ENDP			; hgeSprite::GetTexture
_TEXT	ENDS
PUBLIC	?GetTextureRect@hgeSprite@@QBEXPAM000@Z		; hgeSprite::GetTextureRect
PUBLIC	?GetTextureRect@CAnimSprite@@QAEXPAM000@Z	; CAnimSprite::GetTextureRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTextureRect@CAnimSprite@@QAEXPAM000@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
?GetTextureRect@CAnimSprite@@QAEXPAM000@Z PROC		; CAnimSprite::GetTextureRect, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetTextureRect@hgeSprite@@QBEXPAM000@Z	; hgeSprite::GetTextureRect
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetTextureRect@CAnimSprite@@QAEXPAM000@Z ENDP		; CAnimSprite::GetTextureRect
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTextureRect@hgeSprite@@QBEXPAM000@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
?GetTextureRect@hgeSprite@@QBEXPAM000@Z PROC		; hgeSprite::GetTextureRect, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+104]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+108]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _w$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+112]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+116]
	fstp	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetTextureRect@hgeSprite@@QBEXPAM000@Z ENDP		; hgeSprite::GetTextureRect
_TEXT	ENDS
PUBLIC	?GetColor@hgeSprite@@QBEKH@Z			; hgeSprite::GetColor
PUBLIC	?GetColor@CAnimSprite@@QAEKH@Z			; CAnimSprite::GetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColor@CAnimSprite@@QAEKH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?GetColor@CAnimSprite@@QAEKH@Z PROC			; CAnimSprite::GetColor, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetColor@hgeSprite@@QBEKH@Z		; hgeSprite::GetColor
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetColor@CAnimSprite@@QAEKH@Z ENDP			; CAnimSprite::GetColor
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetColor@hgeSprite@@QBEKH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?GetColor@hgeSprite@@QBEKH@Z PROC			; hgeSprite::GetColor, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetColor@hgeSprite@@QBEKH@Z ENDP			; hgeSprite::GetColor
_TEXT	ENDS
PUBLIC	?GetZ@hgeSprite@@QBEMH@Z			; hgeSprite::GetZ
PUBLIC	?GetZ@CAnimSprite@@QAEMH@Z			; CAnimSprite::GetZ
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetZ@CAnimSprite@@QAEMH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?GetZ@CAnimSprite@@QAEMH@Z PROC				; CAnimSprite::GetZ, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetZ@hgeSprite@@QBEMH@Z		; hgeSprite::GetZ
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetZ@CAnimSprite@@QAEMH@Z ENDP				; CAnimSprite::GetZ
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetZ@hgeSprite@@QBEMH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?GetZ@hgeSprite@@QBEMH@Z PROC				; hgeSprite::GetZ, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetZ@hgeSprite@@QBEMH@Z ENDP				; hgeSprite::GetZ
_TEXT	ENDS
PUBLIC	?GetBlendMode@hgeSprite@@QBEHXZ			; hgeSprite::GetBlendMode
PUBLIC	?GetBlendMode@CAnimSprite@@QAEHXZ		; CAnimSprite::GetBlendMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBlendMode@CAnimSprite@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetBlendMode@CAnimSprite@@QAEHXZ PROC			; CAnimSprite::GetBlendMode, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetBlendMode@hgeSprite@@QBEHXZ		; hgeSprite::GetBlendMode
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBlendMode@CAnimSprite@@QAEHXZ ENDP			; CAnimSprite::GetBlendMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetBlendMode@hgeSprite@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetBlendMode@hgeSprite@@QBEHXZ PROC			; hgeSprite::GetBlendMode, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBlendMode@hgeSprite@@QBEHXZ ENDP			; hgeSprite::GetBlendMode
_TEXT	ENDS
PUBLIC	?GetHotSpot@hgeSprite@@QBEXPAM0@Z		; hgeSprite::GetHotSpot
PUBLIC	?GetHotPos@CAnimSprite@@QAE?AUD3DXVECTOR3@@XZ	; CAnimSprite::GetHotPos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetHotPos@CAnimSprite@@QAE?AUD3DXVECTOR3@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetHotPos@CAnimSprite@@QAE?AUD3DXVECTOR3@@XZ PROC	; CAnimSprite::GetHotPos, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetHotSpot@hgeSprite@@QBEXPAM0@Z	; hgeSprite::GetHotSpot
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetHotPos@CAnimSprite@@QAE?AUD3DXVECTOR3@@XZ ENDP	; CAnimSprite::GetHotPos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetHotSpot@hgeSprite@@QBEXPAM0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetHotSpot@hgeSprite@@QBEXPAM0@Z PROC			; hgeSprite::GetHotSpot, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+128]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+132]
	fstp	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetHotSpot@hgeSprite@@QBEXPAM0@Z ENDP			; hgeSprite::GetHotSpot
_TEXT	ENDS
PUBLIC	?GetFlip@hgeSprite@@QBEXPA_N0@Z			; hgeSprite::GetFlip
PUBLIC	?GetFlip@CAnimSprite@@QAEXPA_N0@Z		; CAnimSprite::GetFlip
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFlip@CAnimSprite@@QAEXPA_N0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bX$ = 8						; size = 4
_bY$ = 12						; size = 4
?GetFlip@CAnimSprite@@QAEXPA_N0@Z PROC			; CAnimSprite::GetFlip, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _bY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetFlip@hgeSprite@@QBEXPA_N0@Z		; hgeSprite::GetFlip
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFlip@CAnimSprite@@QAEXPA_N0@Z ENDP			; CAnimSprite::GetFlip
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetFlip@hgeSprite@@QBEXPA_N0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bX$ = 8						; size = 4
_bY$ = 12						; size = 4
?GetFlip@hgeSprite@@QBEXPA_N0@Z PROC			; hgeSprite::GetFlip, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bX$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _bY$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax], dl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFlip@hgeSprite@@QBEXPA_N0@Z ENDP			; hgeSprite::GetFlip
_TEXT	ENDS
PUBLIC	?GetWidth@hgeSprite@@QBEMXZ			; hgeSprite::GetWidth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWidth@CAnimSprite@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWidth@CAnimSprite@@QAEMXZ PROC			; CAnimSprite::GetWidth, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetWidth@hgeSprite@@QBEMXZ		; hgeSprite::GetWidth
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWidth@CAnimSprite@@QAEMXZ ENDP			; CAnimSprite::GetWidth
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetWidth@hgeSprite@@QBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWidth@hgeSprite@@QBEMXZ PROC			; hgeSprite::GetWidth, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+112]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWidth@hgeSprite@@QBEMXZ ENDP			; hgeSprite::GetWidth
_TEXT	ENDS
PUBLIC	?GetHeight@hgeSprite@@QBEMXZ			; hgeSprite::GetHeight
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetHeight@CAnimSprite@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetHeight@CAnimSprite@@QAEMXZ PROC			; CAnimSprite::GetHeight, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetHeight@hgeSprite@@QBEMXZ		; hgeSprite::GetHeight
; Line 133
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHeight@CAnimSprite@@QAEMXZ ENDP			; CAnimSprite::GetHeight
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetHeight@hgeSprite@@QBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetHeight@hgeSprite@@QBEMXZ PROC			; hgeSprite::GetHeight, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+116]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHeight@hgeSprite@@QBEMXZ ENDP			; hgeSprite::GetHeight
_TEXT	ENDS
PUBLIC	?GetBoundingBox@hgeSprite@@QBEPAVhgeRect@@MMPAV2@@Z ; hgeSprite::GetBoundingBox
PUBLIC	?GetBoundingBox@CAnimSprite@@QAEPAVhgeRect@@MMPAV2@@Z ; CAnimSprite::GetBoundingBox
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBoundingBox@CAnimSprite@@QAEPAVhgeRect@@MMPAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_rect$ = 16						; size = 4
?GetBoundingBox@CAnimSprite@@QAEPAVhgeRect@@MMPAV2@@Z PROC ; CAnimSprite::GetBoundingBox, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetBoundingBox@hgeSprite@@QBEPAVhgeRect@@MMPAV2@@Z ; hgeSprite::GetBoundingBox
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetBoundingBox@CAnimSprite@@QAEPAVhgeRect@@MMPAV2@@Z ENDP ; CAnimSprite::GetBoundingBox
_TEXT	ENDS
PUBLIC	?Set@hgeRect@@QAEXMMMM@Z			; hgeRect::Set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBoundingBox@hgeSprite@@QBEPAVhgeRect@@MMPAV2@@Z
_TEXT	SEGMENT
tv136 = -220						; size = 4
tv134 = -216						; size = 4
tv132 = -212						; size = 4
tv129 = -208						; size = 4
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_rect$ = 16						; size = 4
?GetBoundingBox@hgeSprite@@QBEPAVhgeRect@@MMPAV2@@Z PROC ; hgeSprite::GetBoundingBox, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgesprite.h
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [eax+132]
	mov	ecx, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [ecx+116]
	fstp	DWORD PTR tv129[ebp]
	fld	DWORD PTR tv129[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [edx+128]
	mov	eax, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [eax+112]
	fstp	DWORD PTR tv132[ebp]
	fld	DWORD PTR tv132[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [ecx+132]
	fstp	DWORD PTR tv134[ebp]
	fld	DWORD PTR tv134[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [edx+128]
	fstp	DWORD PTR tv136[ebp]
	fld	DWORD PTR tv136[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _rect$[ebp]
	call	?Set@hgeRect@@QAEXMMMM@Z		; hgeRect::Set
	mov	eax, DWORD PTR _rect$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetBoundingBox@hgeSprite@@QBEPAVhgeRect@@MMPAV2@@Z ENDP ; hgeSprite::GetBoundingBox
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Set@hgeRect@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x1$ = 8						; size = 4
__y1$ = 12						; size = 4
__x2$ = 16						; size = 4
__y2$ = 20						; size = 4
?Set@hgeRect@@QAEXMMMM@Z PROC				; hgeRect::Set, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hgerect.h
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __x1$[ebp]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __x2$[ebp]
	fstp	DWORD PTR [eax+8]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __y1$[ebp]
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __y2$[ebp]
	fstp	DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set@hgeRect@@QAEXMMMM@Z ENDP				; hgeRect::Set
_TEXT	ENDS
PUBLIC	?GetBoundingBoxEx@CAnimSprite@@QAEPAVhgeRect@@MMMMMPAV2@@Z ; CAnimSprite::GetBoundingBoxEx
EXTRN	?GetBoundingBoxEx@hgeSprite@@QBEPAVhgeRect@@MMMMMPAV2@@Z:PROC ; hgeSprite::GetBoundingBoxEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBoundingBoxEx@CAnimSprite@@QAEPAVhgeRect@@MMMMMPAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_rot$ = 16						; size = 4
_hscale$ = 20						; size = 4
_vscale$ = 24						; size = 4
_rect$ = 28						; size = 4
?GetBoundingBoxEx@CAnimSprite@@QAEPAVhgeRect@@MMMMMPAV2@@Z PROC ; CAnimSprite::GetBoundingBoxEx, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\animsprite.cpp
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _vscale$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _hscale$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _rot$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	?GetBoundingBoxEx@hgeSprite@@QBEPAVhgeRect@@MMMMMPAV2@@Z ; hgeSprite::GetBoundingBoxEx
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?GetBoundingBoxEx@CAnimSprite@@QAEPAVhgeRect@@MMMMMPAV2@@Z ENDP ; CAnimSprite::GetBoundingBoxEx
_TEXT	ENDS
END
