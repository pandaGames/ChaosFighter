; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\毕业设计\项目\ChaosFighter\HGEGame\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?FrameFunc@@YA_NXZ				; FrameFunc
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FrameFunc@@YA_NXZ
_TEXT	SEGMENT
_dt$ = -8						; size = 4
?FrameFunc@@YA_NXZ PROC					; FrameFunc, COMDAT
; File e:\毕业设计\项目\chaosfighter\hgegame\main.cpp
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 12
	mov	esi, esp
	push	27					; 0000001bH
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@FrameFunc
	mov	al, 1
	jmp	SHORT $LN2@FrameFunc
$LN1@FrameFunc:
; Line 14
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+144]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR _dt$[ebp]
; Line 15
	mov	esi, esp
	push	ecx
	fld	DWORD PTR _dt$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 17
	xor	al, al
$LN2@FrameFunc:
; Line 18
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FrameFunc@@YA_NXZ ENDP					; FrameFunc
_TEXT	ENDS
PUBLIC	?RenderFunc@@YA_NXZ				; RenderFunc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFunc@@YA_NXZ
_TEXT	SEGMENT
?RenderFunc@@YA_NXZ PROC				; RenderFunc, COMDAT
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 25
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+332]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 26
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+340]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 27
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 29
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+336]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	xor	al, al
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RenderFunc@@YA_NXZ ENDP				; RenderFunc
_TEXT	ENDS
PUBLIC	??_C@_1M@ILHOPKA@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$AA@ ; `string'
PUBLIC	?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z	; HGE::System_SetState
PUBLIC	?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z	; HGE::System_SetState
PUBLIC	?System_SetState@HGE@@QAEXW4hgeStringState@@PBD@Z ; HGE::System_SetState
PUBLIC	??_C@_07IPFAPKEI@HGEGame?$AA@			; `string'
PUBLIC	?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z ; HGE::System_SetState
PUBLIC	_WinMain@16
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	_hgeCreate@4:PROC
;	COMDAT ??_C@_1M@ILHOPKA@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@ILHOPKA@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$AA@ DB 'E', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IPFAPKEI@HGEGame?$AA@
CONST	SEGMENT
??_C@_07IPFAPKEI@HGEGame?$AA@ DB 'HGEGame', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	push	384					; 00000180H
	call	_hgeCreate@4
	mov	ecx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	DWORD PTR [ecx+4], eax
; Line 45
	push	OFFSET ?FrameFunc@@YA_NXZ		; FrameFunc
	push	8
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z ; HGE::System_SetState
; Line 46
	push	OFFSET ?RenderFunc@@YA_NXZ		; RenderFunc
	push	9
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z ; HGE::System_SetState
; Line 47
	push	OFFSET ??_C@_07IPFAPKEI@HGEGame?$AA@
	push	27					; 0000001bH
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeStringState@@PBD@Z ; HGE::System_SetState
; Line 50
	push	0
	push	6
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z ; HGE::System_SetState
; Line 53
	push	60					; 0000003cH
	push	24					; 00000018H
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z ; HGE::System_SetState
; Line 57
	push	1
	push	1
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z ; HGE::System_SetState
; Line 58
	push	800					; 00000320H
	push	17					; 00000011H
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z ; HGE::System_SetState
; Line 59
	push	480					; 000001e0H
	push	18					; 00000012H
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z ; HGE::System_SetState
; Line 62
	push	0
	push	4
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z ; HGE::System_SetState
; Line 65
	push	0
	push	7
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	call	?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z ; HGE::System_SetState
; Line 71
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@WinMain
; Line 74
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	jmp	SHORT $LN1@WinMain
$LN2@WinMain:
; Line 87
	mov	esi, esp
	push	16					; 00000010H
	push	OFFSET ??_C@_1M@ILHOPKA@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$AA@
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	edi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@WinMain:
; Line 95
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 100
	mov	eax, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR ?g_pGame@@3PAVCGame@@A	; g_pGame
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	xor	eax, eax
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_WinMain@16 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
_value$ = 12						; size = 1
?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z PROC	; HGE::System_SetState, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hge gameengine lite version\include\hge.h
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?System_SetState@HGE@@QAEXW4hgeBoolState@@_N@Z ENDP	; HGE::System_SetState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
_value$ = 12						; size = 4
?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z PROC ; HGE::System_SetState, COMDAT
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?System_SetState@HGE@@QAEXW4hgeFuncState@@P6A_NXZ@Z ENDP ; HGE::System_SetState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
_value$ = 12						; size = 4
?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z PROC	; HGE::System_SetState, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?System_SetState@HGE@@QAEXW4hgeIntState@@H@Z ENDP	; HGE::System_SetState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?System_SetState@HGE@@QAEXW4hgeStringState@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
_value$ = 12						; size = 4
?System_SetState@HGE@@QAEXW4hgeStringState@@PBD@Z PROC	; HGE::System_SetState, COMDAT
; _this$ = ecx
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?System_SetState@HGE@@QAEXW4hgeStringState@@PBD@Z ENDP	; HGE::System_SetState
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CMyGame@@QAE@XZ:PROC				; CMyGame::CMyGame
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File e:\毕业设计\项目\chaosfighter\hgegame\main.cpp
xdata$x	SEGMENT
__unwindtable$??__Eg_pGame@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__Eg_pGame@@YAXXZ$0
__ehfuncinfo$??__Eg_pGame@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__Eg_pGame@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__Eg_pGame@@YAXXZ
text$yc	SEGMENT
tv74 = -232						; size = 4
$T105984 = -224						; size = 4
$T105985 = -212						; size = 4
__$EHRec$ = -12						; size = 12
??__Eg_pGame@@YAXXZ PROC				; `dynamic initializer for 'g_pGame'', COMDAT
; Line 8
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__Eg_pGame@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105985[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105985[ebp], 0
	je	SHORT $LN3@dynamic
	mov	ecx, DWORD PTR $T105985[ebp]
	call	??0CMyGame@@QAE@XZ			; CMyGame::CMyGame
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	DWORD PTR tv74[ebp], 0
$LN4@dynamic:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T105984[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T105984[ebp]
	mov	DWORD PTR ?g_pGame@@3PAVCGame@@A, ecx	; g_pGame
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__Eg_pGame@@YAXXZ$0:
	mov	eax, DWORD PTR $T105985[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??__Eg_pGame@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__Eg_pGame@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__Eg_pGame@@YAXXZ ENDP				; `dynamic initializer for 'g_pGame''
PUBLIC	?g_pGame@@3PAVCGame@@A				; g_pGame
_BSS	SEGMENT
?g_pGame@@3PAVCGame@@A DD 01H DUP (?)			; g_pGame
_BSS	ENDS
CRT$XCU	SEGMENT
_g_pGame$initializer$ DD FLAT:??__Eg_pGame@@YAXXZ
CRT$XCU	ENDS
END
