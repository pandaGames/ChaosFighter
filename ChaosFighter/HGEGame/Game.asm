; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\毕业设计\项目\ChaosFighter\HGEGame\HGEFramework\Game.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
_m_fScreenWidth DD 044480000r			; 800
_m_fScreenHeight DD 043f00000r			; 480
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CGame@@6B@					; CGame::`vftable'
PUBLIC	??0CGame@@QAE@XZ				; CGame::CGame
PUBLIC	??_R4CGame@@6B@					; CGame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGame@@@8				; CGame `RTTI Type Descriptor'
PUBLIC	??_R3CGame@@8					; CGame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGame@@8					; CGame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGame@@8				; CGame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?InitGame@CGame@@UAE_NXZ			; CGame::InitGame
PUBLIC	?FrameFunc@CGame@@UAEXM@Z			; CGame::FrameFunc
PUBLIC	?RenderFunc@CGame@@UAEXXZ			; CGame::RenderFunc
PUBLIC	?Release@CGame@@UAEXXZ				; CGame::Release
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CGame@@8
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CGame@@8 DD FLAT:??_R0?AVCGame@@@8	; CGame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGame@@8
rdata$r	ENDS
;	COMDAT ??_R2CGame@@8
rdata$r	SEGMENT
??_R2CGame@@8 DD FLAT:??_R1A@?0A@EA@CGame@@8		; CGame::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGame@@8
rdata$r	SEGMENT
??_R3CGame@@8 DD 00H					; CGame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGame@@@8
_DATA	SEGMENT
??_R0?AVCGame@@@8 DD FLAT:??_7type_info@@6B@		; CGame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGame@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CGame@@6B@
rdata$r	SEGMENT
??_R4CGame@@6B@ DD 00H					; CGame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGame@@@8
	DD	FLAT:??_R3CGame@@8
rdata$r	ENDS
;	COMDAT ??_7CGame@@6B@
CONST	SEGMENT
??_7CGame@@6B@ DD FLAT:??_R4CGame@@6B@			; CGame::`vftable'
	DD	FLAT:?InitGame@CGame@@UAE_NXZ
	DD	FLAT:?FrameFunc@CGame@@UAEXM@Z
	DD	FLAT:?RenderFunc@CGame@@UAEXXZ
	DD	FLAT:?Release@CGame@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CGame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CGame@@QAE@XZ PROC					; CGame::CGame, COMDAT
; _this$ = ecx
; Line 6
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CGame@@6B@
; Line 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 9
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 10
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+25], 1
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CGame@@QAE@XZ ENDP					; CGame::CGame
_TEXT	ENDS
PUBLIC	??1CGame@@QAE@XZ				; CGame::~CGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CGame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CGame@@QAE@XZ PROC					; CGame::~CGame, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CGame@@6B@
; Line 17
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CGame@@QAE@XZ ENDP					; CGame::~CGame
_TEXT	ENDS
PUBLIC	??_C@_0BI@JGKBEFBP@Resource?1Font?1font1?4fnt?$AA@ ; `string'
PUBLIC	?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z	; CGame::CreateWorld
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__real@c1200000
PUBLIC	__real@00000000
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CResourceManager@@QAE@PAVCGame@@@Z:PROC	; CResourceManager::CResourceManager
EXTRN	??0hgeFont@@QAE@PBD_N@Z:PROC			; hgeFont::hgeFont
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0BI@JGKBEFBP@Resource?1Font?1font1?4fnt?$AA@
CONST	SEGMENT
??_C@_0BI@JGKBEFBP@Resource?1Font?1font1?4fnt?$AA@ DB 'Resource/Font/font'
	DB	'1.fnt', 00H					; `string'
CONST	ENDS
;	COMDAT __real@c1200000
CONST	SEGMENT
__real@c1200000 DD 0c1200000r			; -10
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitGame@CGame@@UAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitGame@CGame@@UAE_NXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitGame@CGame@@UAE_NXZ$1
__ehfuncinfo$?InitGame@CGame@@UAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitGame@CGame@@UAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?InitGame@CGame@@UAE_NXZ
_TEXT	SEGMENT
tv90 = -300						; size = 4
tv81 = -300						; size = 4
$T105792 = -292						; size = 12
$T105793 = -272						; size = 4
$T105794 = -260						; size = 4
$T105797 = -248						; size = 4
$T105798 = -236						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InitGame@CGame@@UAE_NXZ PROC				; CGame::InitGame, COMDAT
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitGame@CGame@@UAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@c1200000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105792[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z ; CGame::CreateWorld
; Line 22
	push	3112					; 00000c28H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105794[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105794[ebp], 0
	je	SHORT $LN3@InitGame
	push	0
	push	OFFSET ??_C@_0BI@JGKBEFBP@Resource?1Font?1font1?4fnt?$AA@
	mov	ecx, DWORD PTR $T105794[ebp]
	call	??0hgeFont@@QAE@PBD_N@Z			; hgeFont::hgeFont
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN4@InitGame
$LN3@InitGame:
	mov	DWORD PTR tv81[ebp], 0
$LN4@InitGame:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T105793[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T105793[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 23
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105798[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T105798[ebp], 0
	je	SHORT $LN5@InitGame
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T105798[ebp]
	call	??0CResourceManager@@QAE@PAVCGame@@@Z	; CResourceManager::CResourceManager
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@InitGame
$LN5@InitGame:
	mov	DWORD PTR tv90[ebp], 0
$LN6@InitGame:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T105797[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T105797[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 25
	mov	al, 1
; Line 26
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@InitGame
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@InitGame:
	DD	1
	DD	$LN11@InitGame
$LN11@InitGame:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@InitGame
$LN9@InitGame:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitGame@CGame@@UAE_NXZ$0:
	mov	eax, DWORD PTR $T105794[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitGame@CGame@@UAE_NXZ$1:
	mov	eax, DWORD PTR $T105798[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitGame@CGame@@UAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitGame@CGame@@UAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitGame@CGame@@UAE_NXZ ENDP				; CGame::InitGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File d:\program files\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	?UpdateWorld@CGame@@IAEXM@Z			; CGame::UpdateWorld
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FrameFunc@CGame@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fDeltaTime$ = 8					; size = 4
?FrameFunc@CGame@@UAEXM@Z PROC				; CGame::FrameFunc, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	push	ecx
	fld	DWORD PTR _fDeltaTime$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateWorld@CGame@@IAEXM@Z		; CGame::UpdateWorld
; Line 31
	mov	esi, esp
	push	ecx
	fld	DWORD PTR _fDeltaTime$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FrameFunc@CGame@@UAEXM@Z ENDP				; CGame::FrameFunc
_TEXT	ENDS
EXTRN	?DrawDebugData@b2World@@QAEXXZ:PROC		; b2World::DrawDebugData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFunc@CGame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RenderFunc@CGame@@UAEXXZ PROC				; CGame::RenderFunc, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?DrawDebugData@b2World@@QAEXXZ		; b2World::DrawDebugData
; Line 39
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RenderFunc@CGame@@UAEXXZ ENDP				; CGame::RenderFunc
_TEXT	ENDS
PUBLIC	??_Gb2World@@QAEPAXI@Z				; b2World::`scalar deleting destructor'
PUBLIC	??_GCResourceManager@@QAEPAXI@Z			; CResourceManager::`scalar deleting destructor'
PUBLIC	??_GhgeFont@@QAEPAXI@Z				; hgeFont::`scalar deleting destructor'
EXTRN	?Clear@CResourceManager@@QAEXXZ:PROC		; CResourceManager::Clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Release@CGame@@UAEXXZ
_TEXT	SEGMENT
tv139 = -304						; size = 4
tv130 = -304						; size = 4
tv83 = -304						; size = 4
tv74 = -304						; size = 4
$T105831 = -296						; size = 4
$T105832 = -284						; size = 4
$T105835 = -272						; size = 4
$T105836 = -260						; size = 4
$T105839 = -248						; size = 4
$T105840 = -236						; size = 4
$T105843 = -224						; size = 4
$T105844 = -212						; size = 4
_this$ = -8						; size = 4
?Release@CGame@@UAEXXZ PROC				; CGame::Release, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Clear@CResourceManager@@QAEXXZ		; CResourceManager::Clear
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN4@Release
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T105832[ebp], ecx
	mov	edx, DWORD PTR $T105832[ebp]
	mov	DWORD PTR $T105831[ebp], edx
	cmp	DWORD PTR $T105831[ebp], 0
	je	SHORT $LN7@Release
	push	1
	mov	ecx, DWORD PTR $T105831[ebp]
	call	??_GhgeFont@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Release
$LN7@Release:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Release:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@Release
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T105836[ebp], ecx
	mov	edx, DWORD PTR $T105836[ebp]
	mov	DWORD PTR $T105835[ebp], edx
	cmp	DWORD PTR $T105835[ebp], 0
	je	SHORT $LN9@Release
	push	1
	mov	ecx, DWORD PTR $T105835[ebp]
	call	??_GCResourceManager@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN3@Release
$LN9@Release:
	mov	DWORD PTR tv83[ebp], 0
$LN3@Release:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Release
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T105840[ebp], ecx
	mov	edx, DWORD PTR $T105840[ebp]
	mov	DWORD PTR $T105839[ebp], edx
	cmp	DWORD PTR $T105839[ebp], 0
	je	SHORT $LN11@Release
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T105839[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T105839[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN2@Release
$LN11@Release:
	mov	DWORD PTR tv130[ebp], 0
$LN2@Release:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@Release
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T105844[ebp], ecx
	mov	edx, DWORD PTR $T105844[ebp]
	mov	DWORD PTR $T105843[ebp], edx
	cmp	DWORD PTR $T105843[ebp], 0
	je	SHORT $LN13@Release
	push	1
	mov	ecx, DWORD PTR $T105843[ebp]
	call	??_Gb2World@@QAEPAXI@Z
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN1@Release
$LN13@Release:
	mov	DWORD PTR tv139[ebp], 0
$LN1@Release:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CGame@@UAEXXZ ENDP				; CGame::Release
_TEXT	ENDS
EXTRN	??1hgeFont@@QAE@XZ:PROC				; hgeFont::~hgeFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GhgeFont@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GhgeFont@@QAEPAXI@Z PROC				; hgeFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1hgeFont@@QAE@XZ			; hgeFont::~hgeFont
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GhgeFont@@QAEPAXI@Z ENDP				; hgeFont::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CResourceManager@@QAE@XZ:PROC		; CResourceManager::~CResourceManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCResourceManager@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCResourceManager@@QAEPAXI@Z PROC			; CResourceManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CResourceManager@@QAE@XZ		; CResourceManager::~CResourceManager
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCResourceManager@@QAEPAXI@Z ENDP			; CResourceManager::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1b2World@@QAE@XZ:PROC				; b2World::~b2World
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gb2World@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gb2World@@QAEPAXI@Z PROC				; b2World::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2World@@QAE@XZ			; b2World::~b2World
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gb2World@@QAEPAXI@Z ENDP				; b2World::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@43700000
PUBLIC	__real@43f00000
PUBLIC	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
PUBLIC	__real@43c80000
PUBLIC	__real@44480000
PUBLIC	__real@40400000
PUBLIC	__real@3e99999a
PUBLIC	__real@41200000
PUBLIC	__real@3c888889
PUBLIC	??0b2Vec2@@QAE@MM@Z				; b2Vec2::b2Vec2
PUBLIC	__$ArrayPad$
EXTRN	?SetDebugDraw@b2World@@QAEXPAVb2Draw@@@Z:PROC	; b2World::SetDebugDraw
EXTRN	??0CDebugDraw@@QAE@PAVHGE@@@Z:PROC		; CDebugDraw::CDebugDraw
EXTRN	??0b2World@@QAE@ABUb2Vec2@@@Z:PROC		; b2World::b2World
;	COMDAT __real@43700000
CONST	SEGMENT
__real@43700000 DD 043700000r			; 240
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@3c888889
CONST	SEGMENT
__real@3c888889 DD 03c888889r			; 0.0166667
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z$1
__ehfuncinfo$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
tv188 = -380						; size = 4
tv86 = -380						; size = 4
$T104764 = -372						; size = 12
$T104765 = -352						; size = 12
$T104766 = -332						; size = 12
$T104767 = -312						; size = 12
$T105856 = -292						; size = 4
$T105857 = -280						; size = 4
$T105860 = -268						; size = 4
$T105861 = -256						; size = 4
_wallThick$ = -52					; size = 4
_G$ = -40						; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_gravity$ = 8						; size = 12
?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z PROC		; CGame::CreateWorld, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	push	ecx
	fld	DWORD PTR _gravity$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _gravity$[ebp]
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _G$[ebp]
	call	??0b2Vec2@@QAE@MM@Z			; b2Vec2::b2Vec2
; Line 54
	push	103028					; 00019274H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105857[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105857[ebp], 0
	je	SHORT $LN3@CreateWorl
	lea	eax, DWORD PTR _G$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T105857[ebp]
	call	??0b2World@@QAE@ABUb2Vec2@@@Z		; b2World::b2World
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN4@CreateWorl
$LN3@CreateWorl:
	mov	DWORD PTR tv86[ebp], 0
$LN4@CreateWorl:
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T105856[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T105856[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 8
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 3
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@3c888889
	fstp	DWORD PTR [eax+40]
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+44]
; Line 61
	fld	DWORD PTR __real@41200000
	fstp	DWORD PTR _wallThick$[ebp]
; Line 62
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40400000
	fstp	DWORD PTR [esp]
	push	0
	push	1
	push	ecx
	fld	DWORD PTR _wallThick$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43c80000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104764[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
; Line 63
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40400000
	fstp	DWORD PTR [esp]
	push	0
	push	1
	push	ecx
	fld	DWORD PTR _wallThick$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43c80000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104765[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
; Line 64
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40400000
	fstp	DWORD PTR [esp]
	push	0
	push	1
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _wallThick$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43700000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104766[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
; Line 65
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40400000
	fstp	DWORD PTR [esp]
	push	0
	push	1
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _wallThick$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43700000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104767[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
; Line 67
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105861[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T105861[ebp], 0
	je	SHORT $LN5@CreateWorl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T105861[ebp]
	call	??0CDebugDraw@@QAE@PAVHGE@@@Z		; CDebugDraw::CDebugDraw
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN6@CreateWorl
$LN5@CreateWorl:
	mov	DWORD PTR tv188[ebp], 0
$LN6@CreateWorl:
	mov	edx, DWORD PTR tv188[ebp]
	mov	DWORD PTR $T105860[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T105860[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?SetDebugDraw@b2World@@QAEXPAVb2Draw@@@Z ; b2World::SetDebugDraw
; Line 70
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@CreateWorl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN12@CreateWorl:
	DD	1
	DD	$LN11@CreateWorl
$LN11@CreateWorl:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN9@CreateWorl
$LN9@CreateWorl:
	DB	71					; 00000047H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z$0:
	mov	eax, DWORD PTR $T105857[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z$1:
	mov	eax, DWORD PTR $T105861[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateWorld@CGame@@IAEXUD3DXVECTOR3@@@Z ENDP		; CGame::CreateWorld
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0b2Vec2@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0b2Vec2@@QAE@MM@Z PROC				; b2Vec2::b2Vec2, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0b2Vec2@@QAE@MM@Z ENDP				; b2Vec2::b2Vec2
_TEXT	ENDS
PUBLIC	?GetUserData@b2Body@@QBEPAXXZ			; b2Body::GetUserData
PUBLIC	?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z	; CGame::WorldToScreen
PUBLIC	?GetAngle@b2Body@@QBEMXZ			; b2Body::GetAngle
PUBLIC	?GetPosition@b2Body@@QBEABUb2Vec2@@XZ		; b2Body::GetPosition
PUBLIC	??0b2Vec2@@QAE@XZ				; b2Vec2::b2Vec2
PUBLIC	?GetNext@b2Body@@QAEPAV1@XZ			; b2Body::GetNext
PUBLIC	?GetBodyList@b2World@@QAEPAVb2Body@@XZ		; b2World::GetBodyList
PUBLIC	__$ArrayPad$
EXTRN	?SetAngle@CSprite@@QAEXM@Z:PROC			; CSprite::SetAngle
EXTRN	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z:PROC	; CSprite::SetPos
EXTRN	?ClearForces@b2World@@QAEXXZ:PROC		; b2World::ClearForces
EXTRN	?Step@b2World@@QAEXMHH@Z:PROC			; b2World::Step
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateWorld@CGame@@IAEXM@Z
_TEXT	SEGMENT
$T104789 = -292						; size = 12
_pSprite$104786 = -80					; size = 4
_angle$104785 = -68					; size = 4
_position$104784 = -56					; size = 8
_screen$104783 = -40					; size = 8
_body$104779 = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_fDeltaTime$ = 8					; size = 4
?UpdateWorld@CGame@@IAEXM@Z PROC			; CGame::UpdateWorld, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.cpp
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	fld	DWORD PTR _fDeltaTime$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+48]
$LN6@UpdateWorl:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+40]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN5@UpdateWorl
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [ecx+40]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?Step@b2World@@QAEXMHH@Z		; b2World::Step
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+48]
; Line 79
	jmp	SHORT $LN6@UpdateWorl
$LN5@UpdateWorl:
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+48]
	fstp	DWORD PTR [eax+44]
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?ClearForces@b2World@@QAEXXZ		; b2World::ClearForces
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?GetBodyList@b2World@@QAEPAVb2Body@@XZ	; b2World::GetBodyList
	mov	DWORD PTR _body$104779[ebp], eax
	jmp	SHORT $LN4@UpdateWorl
$LN3@UpdateWorl:
	mov	ecx, DWORD PTR _body$104779[ebp]
	call	?GetNext@b2Body@@QAEPAV1@XZ		; b2Body::GetNext
	mov	DWORD PTR _body$104779[ebp], eax
$LN4@UpdateWorl:
	cmp	DWORD PTR _body$104779[ebp], 0
	je	$LN2@UpdateWorl
; Line 86
	lea	ecx, DWORD PTR _screen$104783[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 87
	mov	ecx, DWORD PTR _body$104779[ebp]
	call	?GetPosition@b2Body@@QBEABUb2Vec2@@XZ	; b2Body::GetPosition
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _position$104784[ebp], ecx
	mov	DWORD PTR _position$104784[ebp+4], edx
; Line 88
	mov	ecx, DWORD PTR _body$104779[ebp]
	call	?GetAngle@b2Body@@QBEMXZ		; b2Body::GetAngle
	fstp	DWORD PTR _angle$104785[ebp]
; Line 89
	lea	eax, DWORD PTR _position$104784[ebp]
	push	eax
	lea	ecx, DWORD PTR _screen$104783[ebp]
	push	ecx
	call	?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ; CGame::WorldToScreen
	add	esp, 8
; Line 91
	mov	ecx, DWORD PTR _body$104779[ebp]
	call	?GetUserData@b2Body@@QBEPAXXZ		; b2Body::GetUserData
	mov	DWORD PTR _pSprite$104786[ebp], eax
; Line 92
	cmp	DWORD PTR _pSprite$104786[ebp], 0
	je	SHORT $LN1@UpdateWorl
; Line 94
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _screen$104783[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _screen$104783[ebp]
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104789[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _pSprite$104786[ebp]
	call	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z	; CSprite::SetPos
; Line 95
	fld	DWORD PTR _angle$104785[ebp]
	fchs
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pSprite$104786[ebp]
	call	?SetAngle@CSprite@@QAEXM@Z		; CSprite::SetAngle
$LN1@UpdateWorl:
; Line 97
	jmp	$LN3@UpdateWorl
$LN2@UpdateWorl:
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UpdateWorl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@UpdateWorl:
	DD	2
	DD	$LN11@UpdateWorl
$LN11@UpdateWorl:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN9@UpdateWorl
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN10@UpdateWorl
$LN10@UpdateWorl:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN9@UpdateWorl:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?UpdateWorld@CGame@@IAEXM@Z ENDP			; CGame::UpdateWorld
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0b2Vec2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2Vec2@@QAE@XZ PROC					; b2Vec2::b2Vec2, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2Vec2@@QAE@XZ ENDP					; b2Vec2::b2Vec2
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPosition@b2Body@@QBEABUb2Vec2@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPosition@b2Body@@QBEABUb2Vec2@@XZ PROC		; b2Body::GetPosition, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 475
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
; Line 476
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPosition@b2Body@@QBEABUb2Vec2@@XZ ENDP		; b2Body::GetPosition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAngle@b2Body@@QBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetAngle@b2Body@@QBEMXZ PROC				; b2Body::GetAngle, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+56]
; Line 481
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAngle@b2Body@@QBEMXZ ENDP				; b2Body::GetAngle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetNext@b2Body@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetNext@b2Body@@QAEPAV1@XZ PROC			; b2Body::GetNext, COMDAT
; _this$ = ecx
; Line 726
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
; Line 728
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNext@b2Body@@QAEPAV1@XZ ENDP			; b2Body::GetNext
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetUserData@b2Body@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetUserData@b2Body@@QBEPAXXZ PROC			; b2Body::GetUserData, COMDAT
; _this$ = ecx
; Line 741
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
; Line 743
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUserData@b2Body@@QBEPAXXZ ENDP			; b2Body::GetUserData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetBodyList@b2World@@QAEPAVb2Body@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetBodyList@b2World@@QAEPAVb2Body@@XZ PROC		; b2World::GetBodyList, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2world.h
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 263
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+102952]
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBodyList@b2World@@QAEPAVb2Body@@XZ ENDP		; b2World::GetBodyList
_TEXT	ENDS
PUBLIC	__real@4000000000000000
;	COMDAT __real@4000000000000000
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.cpp
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z
_TEXT	SEGMENT
_pOut$ = 8						; size = 4
_pIn$ = 12						; size = 4
?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z PROC	; CGame::WorldToScreen, COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR _pIn$[ebp]
	fld	DWORD PTR [eax]
	fdiv	DWORD PTR _MeterPerPixel
	fld	DWORD PTR _m_fScreenWidth
	fdiv	QWORD PTR __real@4000000000000000
	faddp	ST(1), ST(0)
	mov	ecx, DWORD PTR _pOut$[ebp]
	fstp	DWORD PTR [ecx]
; Line 103
	fld	DWORD PTR _MeterPerPixel
	fchs
	mov	eax, DWORD PTR _pIn$[ebp]
	fdivr	DWORD PTR [eax+4]
	fld	DWORD PTR _m_fScreenHeight
	fdiv	QWORD PTR __real@4000000000000000
	faddp	ST(1), ST(0)
	mov	ecx, DWORD PTR _pOut$[ebp]
	fstp	DWORD PTR [ecx+4]
; Line 104
	mov	eax, DWORD PTR _pOut$[ebp]
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ENDP	; CGame::WorldToScreen
_TEXT	ENDS
PUBLIC	?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z	; CGame::ScreenToWorld
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z
_TEXT	SEGMENT
_pOut$ = 8						; size = 4
_pIn$ = 12						; size = 4
?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z PROC	; CGame::ScreenToWorld, COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 109
	fld	DWORD PTR _m_fScreenWidth
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _pIn$[ebp]
	fsubr	DWORD PTR [eax]
	fmul	DWORD PTR _MeterPerPixel
	mov	ecx, DWORD PTR _pOut$[ebp]
	fstp	DWORD PTR [ecx]
; Line 110
	fld	DWORD PTR _m_fScreenHeight
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _pIn$[ebp]
	fsubr	DWORD PTR [eax+4]
	fld	DWORD PTR _MeterPerPixel
	fchs
	fmulp	ST(1), ST(0)
	mov	ecx, DWORD PTR _pOut$[ebp]
	fstp	DWORD PTR [ecx+4]
; Line 111
	mov	eax, DWORD PTR _pOut$[ebp]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ENDP	; CGame::ScreenToWorld
_TEXT	ENDS
PUBLIC	?SetUserData@b2Body@@QAEXPAX@Z			; b2Body::SetUserData
PUBLIC	??0b2FixtureDef@@QAE@XZ				; b2FixtureDef::b2FixtureDef
PUBLIC	?PixelToMeter@CGame@@SAMM@Z			; CGame::PixelToMeter
PUBLIC	??0b2PolygonShape@@QAE@XZ			; b2PolygonShape::b2PolygonShape
PUBLIC	?Set@b2Vec2@@QAEXMM@Z				; b2Vec2::Set
PUBLIC	??0b2BodyDef@@QAE@XZ				; b2BodyDef::b2BodyDef
EXTRN	?CreateFixture@b2Body@@QAEPAVb2Fixture@@PBUb2FixtureDef@@@Z:PROC ; b2Body::CreateFixture
EXTRN	?SetAsBox@b2PolygonShape@@QAEXMM@Z:PROC		; b2PolygonShape::SetAsBox
EXTRN	?CreateBody@b2World@@QAEPAVb2Body@@PBUb2BodyDef@@@Z:PROC ; b2World::CreateBody
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z$0
__ehfuncinfo$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z
_TEXT	SEGMENT
tv208 = -412						; size = 4
tv203 = -408						; size = 4
tv128 = -408						; size = 4
$T105921 = -400						; size = 4
$T105922 = -388						; size = 4
_fixtureDef$ = -172					; size = 28
_pShape$ = -136						; size = 4
_pBody$ = -124						; size = 4
_bodyRequest$ = -112					; size = 52
_pos$ = -52						; size = 8
_world$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_vPos$ = 8						; size = 12
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_isStatic$ = 28						; size = 1
_pSpr$ = 32						; size = 4
_density$ = 36						; size = 4
_friction$ = 40						; size = 4
_restitution$ = 44					; size = 4
?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z PROC ; CGame::CreateBody, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 400				; 00000190H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	lea	ecx, DWORD PTR _world$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 118
	fld	DWORD PTR _vPos$[ebp]
	fstp	DWORD PTR _pos$[ebp]
; Line 119
	fld	DWORD PTR _vPos$[ebp+4]
	fstp	DWORD PTR _pos$[ebp+4]
; Line 120
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _world$[ebp]
	push	ecx
	call	?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ; CGame::ScreenToWorld
	add	esp, 8
; Line 121
	lea	ecx, DWORD PTR _bodyRequest$[ebp]
	call	??0b2BodyDef@@QAE@XZ			; b2BodyDef::b2BodyDef
; Line 122
	movzx	eax, BYTE PTR _isStatic$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 2
	mov	DWORD PTR _bodyRequest$[ebp], eax
; Line 123
	push	ecx
	fld	DWORD PTR _world$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _world$[ebp]
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _bodyRequest$[ebp+4]
	call	?Set@b2Vec2@@QAEXMM@Z			; b2Vec2::Set
; Line 126
	lea	eax, DWORD PTR _bodyRequest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?CreateBody@b2World@@QAEPAVb2Body@@PBUb2BodyDef@@@Z ; b2World::CreateBody
	mov	DWORD PTR _pBody$[ebp], eax
; Line 129
	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105922[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105922[ebp], 0
	je	SHORT $LN4@CreateBody
	mov	ecx, DWORD PTR $T105922[ebp]
	call	??0b2PolygonShape@@QAE@XZ		; b2PolygonShape::b2PolygonShape
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN5@CreateBody
$LN4@CreateBody:
	mov	DWORD PTR tv128[ebp], 0
$LN5@CreateBody:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T105921[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T105921[ebp]
	mov	DWORD PTR _pShape$[ebp], ecx
; Line 130
	fld	DWORD PTR _height$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR tv203[ebp]
	fld	DWORD PTR tv203[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?PixelToMeter@CGame@@SAMM@Z		; CGame::PixelToMeter
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _width$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR tv208[ebp]
	fld	DWORD PTR tv208[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?PixelToMeter@CGame@@SAMM@Z		; CGame::PixelToMeter
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pShape$[ebp]
	call	?SetAsBox@b2PolygonShape@@QAEXMM@Z	; b2PolygonShape::SetAsBox
; Line 132
	lea	ecx, DWORD PTR _fixtureDef$[ebp]
	call	??0b2FixtureDef@@QAE@XZ			; b2FixtureDef::b2FixtureDef
; Line 133
	mov	eax, DWORD PTR _pShape$[ebp]
	mov	DWORD PTR _fixtureDef$[ebp], eax
; Line 134
	fld	DWORD PTR _density$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+16]
; Line 135
	fld	DWORD PTR _friction$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+8]
; Line 136
	fld	DWORD PTR _restitution$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+12]
; Line 139
	lea	eax, DWORD PTR _fixtureDef$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBody$[ebp]
	call	?CreateFixture@b2Body@@QAEPAVb2Fixture@@PBUb2FixtureDef@@@Z ; b2Body::CreateFixture
; Line 141
	cmp	DWORD PTR _pSpr$[ebp], 0
	je	SHORT $LN1@CreateBody
; Line 143
	mov	eax, DWORD PTR _pSpr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBody$[ebp]
	call	?SetUserData@b2Body@@QAEXPAX@Z		; b2Body::SetUserData
$LN1@CreateBody:
; Line 146
	mov	eax, DWORD PTR _pBody$[ebp]
; Line 147
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@CreateBody
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
	npad	1
$LN14@CreateBody:
	DD	5
	DD	$LN13@CreateBody
$LN13@CreateBody:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN7@CreateBody
	DD	-52					; ffffffccH
	DD	8
	DD	$LN8@CreateBody
	DD	-112					; ffffff90H
	DD	52					; 00000034H
	DD	$LN9@CreateBody
	DD	-172					; ffffff54H
	DD	28					; 0000001cH
	DD	$LN10@CreateBody
	DD	-184					; ffffff48H
	DD	4
	DD	$LN11@CreateBody
$LN11@CreateBody:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN10@CreateBody:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	0
$LN9@CreateBody:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	121					; 00000079H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@CreateBody:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN7@CreateBody:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z$0:
	mov	eax, DWORD PTR $T105922[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-416]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ENDP ; CGame::CreateBody
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Set@b2Vec2@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x_$ = 8						; size = 4
_y_$ = 12						; size = 4
?Set@b2Vec2@@QAEXMM@Z PROC				; b2Vec2::Set, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _x_$[ebp]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _y_$[ebp]
	fstp	DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@b2Vec2@@QAEXMM@Z ENDP				; b2Vec2::Set
_TEXT	ENDS
PUBLIC	??1b2Shape@@UAE@XZ				; b2Shape::~b2Shape
PUBLIC	?SetZero@b2Vec2@@QAEXXZ				; b2Vec2::SetZero
PUBLIC	__real@3c23d70a
PUBLIC	??_7b2PolygonShape@@6B@				; b2PolygonShape::`vftable'
PUBLIC	??0b2Shape@@QAE@XZ				; b2Shape::b2Shape
PUBLIC	??_R4b2PolygonShape@@6B@			; b2PolygonShape::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVb2PolygonShape@@@8			; b2PolygonShape `RTTI Type Descriptor'
PUBLIC	??_R3b2PolygonShape@@8				; b2PolygonShape::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2b2PolygonShape@@8				; b2PolygonShape::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@b2PolygonShape@@8			; b2PolygonShape::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@b2Shape@@8			; b2Shape::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVb2Shape@@@8				; b2Shape `RTTI Type Descriptor'
PUBLIC	??_R3b2Shape@@8					; b2Shape::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2b2Shape@@8					; b2Shape::`RTTI Base Class Array'
EXTRN	??_Eb2PolygonShape@@UAEPAXI@Z:PROC		; b2PolygonShape::`vector deleting destructor'
EXTRN	?Clone@b2PolygonShape@@UBEPAVb2Shape@@PAVb2BlockAllocator@@@Z:PROC ; b2PolygonShape::Clone
EXTRN	?GetChildCount@b2PolygonShape@@UBEHXZ:PROC	; b2PolygonShape::GetChildCount
EXTRN	?TestPoint@b2PolygonShape@@UBE_NABUb2Transform@@ABUb2Vec2@@@Z:PROC ; b2PolygonShape::TestPoint
EXTRN	?RayCast@b2PolygonShape@@UBE_NPAUb2RayCastOutput@@ABUb2RayCastInput@@ABUb2Transform@@H@Z:PROC ; b2PolygonShape::RayCast
EXTRN	?ComputeAABB@b2PolygonShape@@UBEXPAUb2AABB@@ABUb2Transform@@H@Z:PROC ; b2PolygonShape::ComputeAABB
EXTRN	?ComputeMass@b2PolygonShape@@UBEXPAUb2MassData@@M@Z:PROC ; b2PolygonShape::ComputeMass
;	COMDAT ??_R2b2Shape@@8
; File d:\program files\box2d\box2d\box2d\box2d\collision\shapes\b2polygonshape.h
rdata$r	SEGMENT
??_R2b2Shape@@8 DD FLAT:??_R1A@?0A@EA@b2Shape@@8	; b2Shape::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3b2Shape@@8
rdata$r	SEGMENT
??_R3b2Shape@@8 DD 00H					; b2Shape::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2b2Shape@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVb2Shape@@@8
_DATA	SEGMENT
??_R0?AVb2Shape@@@8 DD FLAT:??_7type_info@@6B@		; b2Shape `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVb2Shape@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@b2Shape@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@b2Shape@@8 DD FLAT:??_R0?AVb2Shape@@@8	; b2Shape::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3b2Shape@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@b2PolygonShape@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@b2PolygonShape@@8 DD FLAT:??_R0?AVb2PolygonShape@@@8 ; b2PolygonShape::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3b2PolygonShape@@8
rdata$r	ENDS
;	COMDAT ??_R2b2PolygonShape@@8
rdata$r	SEGMENT
??_R2b2PolygonShape@@8 DD FLAT:??_R1A@?0A@EA@b2PolygonShape@@8 ; b2PolygonShape::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@b2Shape@@8
rdata$r	ENDS
;	COMDAT ??_R3b2PolygonShape@@8
rdata$r	SEGMENT
??_R3b2PolygonShape@@8 DD 00H				; b2PolygonShape::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2b2PolygonShape@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVb2PolygonShape@@@8
_DATA	SEGMENT
??_R0?AVb2PolygonShape@@@8 DD FLAT:??_7type_info@@6B@	; b2PolygonShape `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVb2PolygonShape@@', 00H
_DATA	ENDS
;	COMDAT ??_R4b2PolygonShape@@6B@
rdata$r	SEGMENT
??_R4b2PolygonShape@@6B@ DD 00H				; b2PolygonShape::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVb2PolygonShape@@@8
	DD	FLAT:??_R3b2PolygonShape@@8
rdata$r	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT ??_7b2PolygonShape@@6B@
CONST	SEGMENT
??_7b2PolygonShape@@6B@ DD FLAT:??_R4b2PolygonShape@@6B@ ; b2PolygonShape::`vftable'
	DD	FLAT:??_Eb2PolygonShape@@UAEPAXI@Z
	DD	FLAT:?Clone@b2PolygonShape@@UBEPAVb2Shape@@PAVb2BlockAllocator@@@Z
	DD	FLAT:?GetChildCount@b2PolygonShape@@UBEHXZ
	DD	FLAT:?TestPoint@b2PolygonShape@@UBE_NABUb2Transform@@ABUb2Vec2@@@Z
	DD	FLAT:?RayCast@b2PolygonShape@@UBE_NPAUb2RayCastOutput@@ABUb2RayCastInput@@ABUb2Transform@@H@Z
	DD	FLAT:?ComputeAABB@b2PolygonShape@@UBEXPAUb2AABB@@ABUb2Transform@@H@Z
	DD	FLAT:?ComputeMass@b2PolygonShape@@UBEXPAUb2MassData@@M@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0b2PolygonShape@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0b2PolygonShape@@QAE@XZ$0
__ehfuncinfo$??0b2PolygonShape@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0b2PolygonShape@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0b2PolygonShape@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0b2PolygonShape@@QAE@XZ PROC				; b2PolygonShape::b2PolygonShape, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0b2PolygonShape@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0b2Shape@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7b2PolygonShape@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	push	OFFSET ??0b2Vec2@@QAE@XZ		; b2Vec2::b2Vec2
	push	8
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	push	OFFSET ??0b2Vec2@@QAE@XZ		; b2Vec2::b2Vec2
	push	8
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 2
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@3c23d70a
	fstp	DWORD PTR [eax+8]
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?SetZero@b2Vec2@@QAEXXZ			; b2Vec2::SetZero
; Line 87
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0b2PolygonShape@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1b2Shape@@UAE@XZ			; b2Shape::~b2Shape
__ehhandler$??0b2PolygonShape@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0b2PolygonShape@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0b2PolygonShape@@QAE@XZ ENDP				; b2PolygonShape::b2PolygonShape
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetZero@b2Vec2@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetZero@b2Vec2@@QAEXXZ PROC				; b2Vec2::SetZero, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetZero@b2Vec2@@QAEXXZ ENDP				; b2Vec2::SetZero
_TEXT	ENDS
PUBLIC	??_7b2Shape@@6B@				; b2Shape::`vftable'
PUBLIC	??_R4b2Shape@@6B@				; b2Shape::`RTTI Complete Object Locator'
EXTRN	??_Eb2Shape@@UAEPAXI@Z:PROC			; b2Shape::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R4b2Shape@@6B@
; File d:\program files\box2d\box2d\box2d\box2d\collision\shapes\b2shape.h
rdata$r	SEGMENT
??_R4b2Shape@@6B@ DD 00H				; b2Shape::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVb2Shape@@@8
	DD	FLAT:??_R3b2Shape@@8
rdata$r	ENDS
;	COMDAT ??_7b2Shape@@6B@
CONST	SEGMENT
??_7b2Shape@@6B@ DD FLAT:??_R4b2Shape@@6B@		; b2Shape::`vftable'
	DD	FLAT:??_Eb2Shape@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1b2Shape@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1b2Shape@@UAE@XZ PROC					; b2Shape::~b2Shape, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7b2Shape@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1b2Shape@@UAE@XZ ENDP					; b2Shape::~b2Shape
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gb2Shape@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gb2Shape@@UAEPAXI@Z PROC				; b2Shape::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2Shape@@UAE@XZ			; b2Shape::~b2Shape
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gb2Shape@@UAEPAXI@Z ENDP				; b2Shape::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0b2Shape@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2Shape@@QAE@XZ PROC					; b2Shape::b2Shape, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7b2Shape@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2Shape@@QAE@XZ ENDP					; b2Shape::b2Shape
_TEXT	ENDS
PUBLIC	??1b2PolygonShape@@UAE@XZ			; b2PolygonShape::~b2PolygonShape
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gb2PolygonShape@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gb2PolygonShape@@UAEPAXI@Z PROC			; b2PolygonShape::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2PolygonShape@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gb2PolygonShape@@UAEPAXI@Z ENDP			; b2PolygonShape::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1b2PolygonShape@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1b2PolygonShape@@UAE@XZ PROC				; b2PolygonShape::~b2PolygonShape, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2Shape@@UAE@XZ			; b2Shape::~b2Shape
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1b2PolygonShape@@UAE@XZ ENDP				; b2PolygonShape::~b2PolygonShape
_TEXT	ENDS
PUBLIC	__real@3f800000
;	COMDAT __real@3f800000
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0b2BodyDef@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2BodyDef@@QAE@XZ PROC				; b2BodyDef::b2BodyDef, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 57
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Set@b2Vec2@@QAEXMM@Z			; b2Vec2::Set
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+12]
; Line 59
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Set@b2Vec2@@QAEXMM@Z			; b2Vec2::Set
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+24]
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+28]
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+32]
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+37], 1
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+38], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+39], 0
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 1
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	fld1
	fstp	DWORD PTR [eax+48]
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2BodyDef@@QAE@XZ ENDP				; b2BodyDef::b2BodyDef
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetUserData@b2Body@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
?SetUserData@b2Body@@QAEXPAX@Z PROC			; b2Body::SetUserData, COMDAT
; _this$ = ecx
; Line 736
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 737
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 738
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUserData@b2Body@@QAEXPAX@Z ENDP			; b2Body::SetUserData
_TEXT	ENDS
PUBLIC	__real@3e4ccccd
PUBLIC	??0b2Filter@@QAE@XZ				; b2Filter::b2Filter
;	COMDAT __real@3e4ccccd
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2fixture.h
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0b2FixtureDef@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2FixtureDef@@QAE@XZ PROC				; b2FixtureDef::b2FixtureDef, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 22					; 00000016H
	call	??0b2Filter@@QAE@XZ			; b2Filter::b2Filter
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR [eax+8]
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+12]
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+16]
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2FixtureDef@@QAE@XZ ENDP				; b2FixtureDef::b2FixtureDef
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0b2Filter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2Filter@@QAE@XZ PROC				; b2Filter::b2Filter, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 37
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 38
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2Filter@@QAE@XZ ENDP				; b2Filter::b2Filter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?PixelToMeter@CGame@@SAMM@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
_pixel$ = 8						; size = 4
?PixelToMeter@CGame@@SAMM@Z PROC			; CGame::PixelToMeter, COMDAT
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR _pixel$[ebp]
	fmul	DWORD PTR _MeterPerPixel
	fstp	DWORD PTR tv68[ebp]
	fld	DWORD PTR tv68[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?PixelToMeter@CGame@@SAMM@Z ENDP			; CGame::PixelToMeter
_TEXT	ENDS
PUBLIC	??0b2CircleShape@@QAE@XZ			; b2CircleShape::b2CircleShape
PUBLIC	?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z ; CGame::CreateCircle
;	COMDAT xdata$x
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\game.cpp
xdata$x	SEGMENT
__unwindtable$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z$0
__ehfuncinfo$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z
_TEXT	SEGMENT
tv128 = -408						; size = 4
$T105982 = -400						; size = 4
$T105983 = -388						; size = 4
_fixtureDef$ = -172					; size = 28
_pShape$ = -136						; size = 4
_pBody$ = -124						; size = 4
_bodyRequest$ = -112					; size = 52
_pos$ = -52						; size = 8
_world$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_vPos$ = 8						; size = 12
_radius$ = 20						; size = 4
_isStatic$ = 24						; size = 1
_pSpr$ = 28						; size = 4
_density$ = 32						; size = 4
_friction$ = 36						; size = 4
_restitution$ = 40					; size = 4
?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z PROC ; CGame::CreateCircle, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	lea	ecx, DWORD PTR _world$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 153
	fld	DWORD PTR _vPos$[ebp]
	fstp	DWORD PTR _pos$[ebp]
; Line 154
	fld	DWORD PTR _vPos$[ebp+4]
	fstp	DWORD PTR _pos$[ebp+4]
; Line 155
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _world$[ebp]
	push	ecx
	call	?ScreenToWorld@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ; CGame::ScreenToWorld
	add	esp, 8
; Line 156
	lea	ecx, DWORD PTR _bodyRequest$[ebp]
	call	??0b2BodyDef@@QAE@XZ			; b2BodyDef::b2BodyDef
; Line 157
	movzx	eax, BYTE PTR _isStatic$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 2
	mov	DWORD PTR _bodyRequest$[ebp], eax
; Line 158
	push	ecx
	fld	DWORD PTR _world$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _world$[ebp]
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _bodyRequest$[ebp+4]
	call	?Set@b2Vec2@@QAEXMM@Z			; b2Vec2::Set
; Line 161
	lea	eax, DWORD PTR _bodyRequest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?CreateBody@b2World@@QAEPAVb2Body@@PBUb2BodyDef@@@Z ; b2World::CreateBody
	mov	DWORD PTR _pBody$[ebp], eax
; Line 164
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T105983[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T105983[ebp], 0
	je	SHORT $LN4@CreateCirc
	mov	ecx, DWORD PTR $T105983[ebp]
	call	??0b2CircleShape@@QAE@XZ		; b2CircleShape::b2CircleShape
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN5@CreateCirc
$LN4@CreateCirc:
	mov	DWORD PTR tv128[ebp], 0
$LN5@CreateCirc:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T105982[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T105982[ebp]
	mov	DWORD PTR _pShape$[ebp], ecx
; Line 165
	push	ecx
	fld	DWORD PTR _radius$[ebp]
	fstp	DWORD PTR [esp]
	call	?PixelToMeter@CGame@@SAMM@Z		; CGame::PixelToMeter
	add	esp, 4
	mov	eax, DWORD PTR _pShape$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 167
	lea	ecx, DWORD PTR _fixtureDef$[ebp]
	call	??0b2FixtureDef@@QAE@XZ			; b2FixtureDef::b2FixtureDef
; Line 168
	mov	eax, DWORD PTR _pShape$[ebp]
	mov	DWORD PTR _fixtureDef$[ebp], eax
; Line 169
	fld	DWORD PTR _density$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+16]
; Line 170
	fld	DWORD PTR _friction$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+8]
; Line 171
	fld	DWORD PTR _restitution$[ebp]
	fstp	DWORD PTR _fixtureDef$[ebp+12]
; Line 174
	lea	eax, DWORD PTR _fixtureDef$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBody$[ebp]
	call	?CreateFixture@b2Body@@QAEPAVb2Fixture@@PBUb2FixtureDef@@@Z ; b2Body::CreateFixture
; Line 176
	cmp	DWORD PTR _pSpr$[ebp], 0
	je	SHORT $LN1@CreateCirc
; Line 178
	mov	eax, DWORD PTR _pSpr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBody$[ebp]
	call	?SetUserData@b2Body@@QAEXPAX@Z		; b2Body::SetUserData
$LN1@CreateCirc:
; Line 181
	mov	eax, DWORD PTR _pBody$[ebp]
; Line 182
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@CreateCirc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	1
$LN14@CreateCirc:
	DD	5
	DD	$LN13@CreateCirc
$LN13@CreateCirc:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN7@CreateCirc
	DD	-52					; ffffffccH
	DD	8
	DD	$LN8@CreateCirc
	DD	-112					; ffffff90H
	DD	52					; 00000034H
	DD	$LN9@CreateCirc
	DD	-172					; ffffff54H
	DD	28					; 0000001cH
	DD	$LN10@CreateCirc
	DD	-184					; ffffff48H
	DD	4
	DD	$LN11@CreateCirc
$LN11@CreateCirc:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN10@CreateCirc:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	0
$LN9@CreateCirc:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	121					; 00000079H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@CreateCirc:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN7@CreateCirc:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z$0:
	mov	eax, DWORD PTR $T105983[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateCircle@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@M_NPAVCSprite@@MMM@Z ENDP ; CGame::CreateCircle
PUBLIC	??_7b2CircleShape@@6B@				; b2CircleShape::`vftable'
PUBLIC	??_R4b2CircleShape@@6B@				; b2CircleShape::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVb2CircleShape@@@8			; b2CircleShape `RTTI Type Descriptor'
PUBLIC	??_R3b2CircleShape@@8				; b2CircleShape::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2b2CircleShape@@8				; b2CircleShape::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@b2CircleShape@@8			; b2CircleShape::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Eb2CircleShape@@UAEPAXI@Z:PROC		; b2CircleShape::`vector deleting destructor'
EXTRN	?Clone@b2CircleShape@@UBEPAVb2Shape@@PAVb2BlockAllocator@@@Z:PROC ; b2CircleShape::Clone
EXTRN	?GetChildCount@b2CircleShape@@UBEHXZ:PROC	; b2CircleShape::GetChildCount
EXTRN	?TestPoint@b2CircleShape@@UBE_NABUb2Transform@@ABUb2Vec2@@@Z:PROC ; b2CircleShape::TestPoint
EXTRN	?RayCast@b2CircleShape@@UBE_NPAUb2RayCastOutput@@ABUb2RayCastInput@@ABUb2Transform@@H@Z:PROC ; b2CircleShape::RayCast
EXTRN	?ComputeAABB@b2CircleShape@@UBEXPAUb2AABB@@ABUb2Transform@@H@Z:PROC ; b2CircleShape::ComputeAABB
EXTRN	?ComputeMass@b2CircleShape@@UBEXPAUb2MassData@@M@Z:PROC ; b2CircleShape::ComputeMass
;	COMDAT ??_R1A@?0A@EA@b2CircleShape@@8
; File d:\program files\box2d\box2d\box2d\box2d\collision\shapes\b2circleshape.h
rdata$r	SEGMENT
??_R1A@?0A@EA@b2CircleShape@@8 DD FLAT:??_R0?AVb2CircleShape@@@8 ; b2CircleShape::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3b2CircleShape@@8
rdata$r	ENDS
;	COMDAT ??_R2b2CircleShape@@8
rdata$r	SEGMENT
??_R2b2CircleShape@@8 DD FLAT:??_R1A@?0A@EA@b2CircleShape@@8 ; b2CircleShape::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@b2Shape@@8
rdata$r	ENDS
;	COMDAT ??_R3b2CircleShape@@8
rdata$r	SEGMENT
??_R3b2CircleShape@@8 DD 00H				; b2CircleShape::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2b2CircleShape@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVb2CircleShape@@@8
_DATA	SEGMENT
??_R0?AVb2CircleShape@@@8 DD FLAT:??_7type_info@@6B@	; b2CircleShape `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVb2CircleShape@@', 00H
_DATA	ENDS
;	COMDAT ??_R4b2CircleShape@@6B@
rdata$r	SEGMENT
??_R4b2CircleShape@@6B@ DD 00H				; b2CircleShape::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVb2CircleShape@@@8
	DD	FLAT:??_R3b2CircleShape@@8
rdata$r	ENDS
;	COMDAT ??_7b2CircleShape@@6B@
CONST	SEGMENT
??_7b2CircleShape@@6B@ DD FLAT:??_R4b2CircleShape@@6B@	; b2CircleShape::`vftable'
	DD	FLAT:??_Eb2CircleShape@@UAEPAXI@Z
	DD	FLAT:?Clone@b2CircleShape@@UBEPAVb2Shape@@PAVb2BlockAllocator@@@Z
	DD	FLAT:?GetChildCount@b2CircleShape@@UBEHXZ
	DD	FLAT:?TestPoint@b2CircleShape@@UBE_NABUb2Transform@@ABUb2Vec2@@@Z
	DD	FLAT:?RayCast@b2CircleShape@@UBE_NPAUb2RayCastOutput@@ABUb2RayCastInput@@ABUb2Transform@@H@Z
	DD	FLAT:?ComputeAABB@b2CircleShape@@UBEXPAUb2AABB@@ABUb2Transform@@H@Z
	DD	FLAT:?ComputeMass@b2CircleShape@@UBEXPAUb2MassData@@M@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0b2CircleShape@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0b2CircleShape@@QAE@XZ$0
__ehfuncinfo$??0b2CircleShape@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0b2CircleShape@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0b2CircleShape@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0b2CircleShape@@QAE@XZ PROC				; b2CircleShape::b2CircleShape, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0b2CircleShape@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0b2Shape@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7b2CircleShape@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
; Line 69
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?SetZero@b2Vec2@@QAEXXZ			; b2Vec2::SetZero
; Line 70
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0b2CircleShape@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1b2Shape@@UAE@XZ			; b2Shape::~b2Shape
__ehhandler$??0b2CircleShape@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0b2CircleShape@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0b2CircleShape@@QAE@XZ ENDP				; b2CircleShape::b2CircleShape
PUBLIC	??1b2CircleShape@@UAE@XZ			; b2CircleShape::~b2CircleShape
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gb2CircleShape@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gb2CircleShape@@UAEPAXI@Z PROC			; b2CircleShape::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2CircleShape@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gb2CircleShape@@UAEPAXI@Z ENDP			; b2CircleShape::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1b2CircleShape@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1b2CircleShape@@UAE@XZ PROC				; b2CircleShape::~b2CircleShape, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2Shape@@UAE@XZ			; b2Shape::~b2Shape
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1b2CircleShape@@UAE@XZ ENDP				; b2CircleShape::~b2CircleShape
_TEXT	ENDS
END
