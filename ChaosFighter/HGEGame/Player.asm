; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\MyCodes\ChaosFighter\trunk\ChaosFighter\HGEGame\Player\Player.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?SetFixedRotation@b2Body@@QAEX_N@Z		; b2Body::SetFixedRotation
PUBLIC	__real@42c80000
PUBLIC	__real@42200000
PUBLIC	__real@40400000
PUBLIC	__real@3f800000
PUBLIC	__real@41f00000
PUBLIC	__real@42700000
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__real@00000000
PUBLIC	??_C@_1M@ODGMBGCH@?$AAR?$AAo?$AAl?$AAe?$AA1?$AA?$AA@ ; `string'
PUBLIC	__real@40c00000
PUBLIC	__real@41a00000
PUBLIC	__real@44050000
PUBLIC	__real@42580000
PUBLIC	__real@42a80000
PUBLIC	__$ArrayPad$
PUBLIC	??0CPlayer@@QAE@PAVCGame@@PAVCSpriteManager@@@Z	; CPlayer::CPlayer
EXTRN	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z:PROC ; CGame::CreateBody
EXTRN	?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z:PROC ; CAnimSprite::SetHotPos
EXTRN	?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z:PROC ; CSpriteManager::CreateAnimSprite
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT __real@42c80000
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\player\player.cpp
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1M@ODGMBGCH@?$AAR?$AAo?$AAl?$AAe?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1M@ODGMBGCH@?$AAR?$AAo?$AAl?$AAe?$AA1?$AA?$AA@ DB 'R', 00H, 'o', 00H
	DB	'l', 00H, 'e', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@44050000
CONST	SEGMENT
__real@44050000 DD 044050000r			; 532
CONST	ENDS
;	COMDAT __real@42580000
CONST	SEGMENT
__real@42580000 DD 042580000r			; 54
CONST	ENDS
;	COMDAT __real@42a80000
CONST	SEGMENT
__real@42a80000 DD 042a80000r			; 84
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CPlayer@@QAE@PAVCGame@@PAVCSpriteManager@@@Z
_TEXT	SEGMENT
$T103236 = -264						; size = 12
$T103238 = -244						; size = 12
$T103239 = -224						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pGame$ = 8						; size = 4
_pSprManager$ = 12					; size = 4
??0CPlayer@@QAE@PAVCGame@@PAVCSpriteManager@@@Z PROC	; CPlayer::CPlayer, COMDAT
; _this$ = ecx
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pGame$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 6
	push	1
	push	ecx
	fld	DWORD PTR __real@42a80000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42580000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44050000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40c00000
	fstp	DWORD PTR [esp]
	push	6
	push	OFFSET ??_C@_1M@ODGMBGCH@?$AAR?$AAo?$AAl?$AAe?$AA1?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T103236[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _pSprManager$[ebp]
	call	?CreateAnimSprite@CSpriteManager@@QAEPAVCAnimSprite@@UD3DXVECTOR3@@QA_WHMMMMM_N@Z ; CSpriteManager::CreateAnimSprite
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 7
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42700000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@41f00000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T103238[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?SetHotPos@CAnimSprite@@QAEXUD3DXVECTOR3@@@Z ; CAnimSprite::SetHotPos
; Line 8
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40400000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	ecx
	fld	DWORD PTR __real@42200000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42200000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T103239[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?CreateBody@CGame@@QAEPAVb2Body@@UD3DXVECTOR3@@MM_NPAVCSprite@@MMM@Z ; CGame::CreateBody
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 9
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetFixedRotation@b2Body@@QAEX_N@Z	; b2Body::SetFixedRotation
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CPlayer@@QAE@PAVCGame@@PAVCSpriteManager@@@Z ENDP	; CPlayer::CPlayer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File d:\program files\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
EXTRN	?ResetMassData@b2Body@@QAEXXZ:PROC		; b2Body::ResetMassData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetFixedRotation@b2Body@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_flag$ = 8						; size = 1
?SetFixedRotation@b2Body@@QAEX_N@Z PROC			; b2Body::SetFixedRotation, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
; Line 659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 660
	movzx	eax, BYTE PTR _flag$[ebp]
	test	eax, eax
	je	SHORT $LN2@SetFixedRo
; Line 662
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 664
	jmp	SHORT $LN1@SetFixedRo
$LN2@SetFixedRo:
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
$LN1@SetFixedRo:
; Line 669
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetMassData@b2Body@@QAEXXZ		; b2Body::ResetMassData
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFixedRotation@b2Body@@QAEX_N@Z ENDP			; b2Body::SetFixedRotation
_TEXT	ENDS
PUBLIC	??1CPlayer@@QAE@XZ				; CPlayer::~CPlayer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CPlayer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CPlayer@@QAE@XZ PROC					; CPlayer::~CPlayer, COMDAT
; _this$ = ecx
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\player\player.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 18
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPlayer@@QAE@XZ ENDP					; CPlayer::~CPlayer
_TEXT	ENDS
PUBLIC	__real@42640000
PUBLIC	?SetSpeed@hgeAnimation@@QAEXM@Z			; hgeAnimation::SetSpeed
PUBLIC	?SetFrames@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrames
PUBLIC	?Stand@CPlayer@@QAEXXZ				; CPlayer::Stand
EXTRN	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z:PROC	; CAnimSprite::SetTextureRect
;	COMDAT __real@42640000
CONST	SEGMENT
__real@42640000 DD 042640000r			; 57
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Stand@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Stand@CPlayer@@QAEXXZ PROC				; CPlayer::Stand, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 22
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 23
	push	ecx
	fld	DWORD PTR __real@40c00000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 24
	push	ecx
	fld	DWORD PTR __real@42a80000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42640000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44050000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 26
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Stand@CPlayer@@QAEXXZ ENDP				; CPlayer::Stand
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
;	COMDAT __real@3ff0000000000000
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hge gameengine lite version\include\hgeanim.h
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetSpeed@hgeAnimation@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_FPS$ = 8						; size = 4
?SetSpeed@hgeAnimation@@QAEXM@Z PROC			; hgeAnimation::SetSpeed, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	DWORD PTR _FPS$[ebp]
	fld1
	fdivrp	ST(1), ST(0)
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+148]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSpeed@hgeAnimation@@QAEXM@Z ENDP			; hgeAnimation::SetSpeed
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetFrames@hgeAnimation@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?SetFrames@hgeAnimation@@QAEXH@Z PROC			; hgeAnimation::SetFrames, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+164], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFrames@hgeAnimation@@QAEXH@Z ENDP			; hgeAnimation::SetFrames
_TEXT	ENDS
PUBLIC	__real@41900000
PUBLIC	__real@441e4000
PUBLIC	__real@42480000
PUBLIC	?Run@CPlayer@@QAEXXZ				; CPlayer::Run
;	COMDAT __real@41900000
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\player\player.cpp
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@441e4000
CONST	SEGMENT
__real@441e4000 DD 0441e4000r			; 633
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Run@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Run@CPlayer@@QAEXXZ PROC				; CPlayer::Run, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	push	ecx
	fld	DWORD PTR __real@42a80000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@441e4000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@41900000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 30
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 31
	push	ecx
	fld	DWORD PTR __real@40c00000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 1
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Run@CPlayer@@QAEXXZ ENDP				; CPlayer::Run
_TEXT	ENDS
PUBLIC	__real@41000000
PUBLIC	__real@43340000
PUBLIC	__real@42b40000
PUBLIC	?GetFrame@hgeAnimation@@QBEHXZ			; hgeAnimation::GetFrame
PUBLIC	?Jump@CPlayer@@QAEXXZ				; CPlayer::Jump
EXTRN	?SetFrame@hgeAnimation@@QAEXH@Z:PROC		; hgeAnimation::SetFrame
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Jump@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Jump@CPlayer@@QAEXXZ PROC				; CPlayer::Jump, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 3
	jle	SHORT $LN1@Jump
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
$LN1@Jump:
; Line 37
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43340000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 38
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 39
	push	ecx
	fld	DWORD PTR __real@41000000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 2
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Jump@CPlayer@@QAEXXZ ENDP				; CPlayer::Jump
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetFrame@hgeAnimation@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetFrame@hgeAnimation@@QBEHXZ PROC			; hgeAnimation::GetFrame, COMDAT
; _this$ = ecx
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hge gameengine lite version\include\hgeanim.h
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+168]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFrame@hgeAnimation@@QBEHXZ ENDP			; hgeAnimation::GetFrame
_TEXT	ENDS
PUBLIC	__real@43b40000
PUBLIC	?Down@CPlayer@@QAEXXZ				; CPlayer::Down
;	COMDAT __real@43b40000
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\player\player.cpp
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Down@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Down@CPlayer@@QAEXXZ PROC				; CPlayer::Down, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 3
	jle	SHORT $LN1@Down
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
$LN1@Down:
; Line 45
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43340000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43b40000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 46
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 47
	push	ecx
	fld	DWORD PTR __real@41000000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Down@CPlayer@@QAEXXZ ENDP				; CPlayer::Down
_TEXT	ENDS
PUBLIC	__real@41400000
PUBLIC	__real@43870000
PUBLIC	?ZSwordA@CPlayer@@QAEXXZ			; CPlayer::ZSwordA
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@43870000
CONST	SEGMENT
__real@43870000 DD 043870000r			; 270
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ZSwordA@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ZSwordA@CPlayer@@QAEXXZ PROC				; CPlayer::ZSwordA, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43870000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 53
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
; Line 54
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 55
	push	ecx
	fld	DWORD PTR __real@41400000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 4
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ZSwordA@CPlayer@@QAEXXZ ENDP				; CPlayer::ZSwordA
_TEXT	ENDS
PUBLIC	?ZSwordB@CPlayer@@QAEXXZ			; CPlayer::ZSwordB
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ZSwordB@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ZSwordB@CPlayer@@QAEXXZ PROC				; CPlayer::ZSwordB, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 61
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
; Line 62
	push	9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 63
	push	ecx
	fld	DWORD PTR __real@41400000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 5
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ZSwordB@CPlayer@@QAEXXZ ENDP				; CPlayer::ZSwordB
_TEXT	ENDS
PUBLIC	__real@41800000
PUBLIC	__real@43e10000
PUBLIC	?ZSwordC@CPlayer@@QAEXXZ			; CPlayer::ZSwordC
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@43e10000
CONST	SEGMENT
__real@43e10000 DD 043e10000r			; 450
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ZSwordC@CPlayer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ZSwordC@CPlayer@@QAEXXZ PROC				; CPlayer::ZSwordC, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43e10000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetTextureRect@CAnimSprite@@QAEXMMMM@Z	; CAnimSprite::SetTextureRect
; Line 69
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
; Line 70
	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrames@hgeAnimation@@QAEXH@Z	; hgeAnimation::SetFrames
; Line 71
	push	ecx
	fld	DWORD PTR __real@41800000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetSpeed@hgeAnimation@@QAEXM@Z		; hgeAnimation::SetSpeed
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 6
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ZSwordC@CPlayer@@QAEXXZ ENDP				; CPlayer::ZSwordC
_TEXT	ENDS
PUBLIC	?SetPos@CPlayer@@QAEXUD3DXVECTOR3@@@Z		; CPlayer::SetPos
EXTRN	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z:PROC	; CSprite::SetPos
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetPos@CPlayer@@QAEXUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vPos$ = 8						; size = 12
?SetPos@CPlayer@@QAEXUD3DXVECTOR3@@@Z PROC		; CPlayer::SetPos, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z	; CSprite::SetPos
; Line 78
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetPos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN5@SetPos:
	DD	1
	DD	$LN4@SetPos
$LN4@SetPos:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@SetPos
$LN3@SetPos:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?SetPos@CPlayer@@QAEXUD3DXVECTOR3@@@Z ENDP		; CPlayer::SetPos
_TEXT	ENDS
PUBLIC	__real@c0000000
PUBLIC	__real@bff8000000000000
PUBLIC	__real@40000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@0000000000000000
PUBLIC	?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z		; b2Body::ApplyForce
PUBLIC	??0b2Vec2@@QAE@MM@Z				; b2Vec2::b2Vec2
PUBLIC	?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ	; b2Body::GetWorldCenter
PUBLIC	__real@bfb999999999999a
PUBLIC	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ	; b2Body::GetLinearVelocity
PUBLIC	?Control@CPlayer@@QAEXXZ			; CPlayer::Control
EXTRN	?SetFlip@CAnimSprite@@QAEX_N00@Z:PROC		; CAnimSprite::SetFlip
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bff8000000000000
CONST	SEGMENT
__real@bff8000000000000 DQ 0bff8000000000000r	; -1.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@bfb999999999999a
CONST	SEGMENT
__real@bfb999999999999a DQ 0bfb999999999999ar	; -0.1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Control@CPlayer@@QAEXXZ
_TEXT	SEGMENT
$T104322 = -344						; size = 8
$T104323 = -328						; size = 8
$T104324 = -312						; size = 8
$T104325 = -296						; size = 8
$T104326 = -280						; size = 8
$T104327 = -264						; size = 8
$T104328 = -248						; size = 8
$T104329 = -232						; size = 8
$T104330 = -216						; size = 8
_this$ = -8						; size = 4
?Control@CPlayer@@QAEXXZ PROC				; CPlayer::Control, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	esi, esp
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN28@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN28@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN28@Control
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ZSwordA@CPlayer@@QAEXXZ		; CPlayer::ZSwordA
	jmp	$LN22@Control
$LN28@Control:
; Line 84
	mov	esi, esp
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN26@Control
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 6
	jl	SHORT $LN26@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 4
	jne	SHORT $LN26@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ZSwordB@CPlayer@@QAEXXZ		; CPlayer::ZSwordB
	jmp	$LN22@Control
$LN26@Control:
; Line 85
	mov	esi, esp
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN24@Control
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 7
	jl	SHORT $LN24@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 5
	jne	SHORT $LN24@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ZSwordC@CPlayer@@QAEXXZ		; CPlayer::ZSwordC
; Line 86
	jmp	$LN22@Control
$LN24@Control:
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 7
	jl	SHORT $LN20@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN20@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 4
	je	SHORT $LN21@Control
$LN20@Control:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 8
	jl	SHORT $LN19@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN19@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 5
	je	SHORT $LN21@Control
$LN19@Control:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?GetFrame@hgeAnimation@@QBEHXZ		; hgeAnimation::GetFrame
	cmp	eax, 10					; 0000000aH
	jl	SHORT $LN22@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN22@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 6
	jne	SHORT $LN22@Control
$LN21@Control:
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 212				; 000000d4H
	call	?SetFrame@hgeAnimation@@QAEXH@Z		; hgeAnimation::SetFrame
$LN22@Control:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	$LN1@Control
; Line 94
	lea	eax, DWORD PTR $T104322[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax+4]
	fcomp	QWORD PTR __real@bfb999999999999a
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN17@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN17@Control
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 1
	jmp	SHORT $LN15@Control
$LN17@Control:
; Line 95
	mov	esi, esp
	push	67					; 00000043H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN15@Control
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ ; b2Body::GetWorldCenter
	push	eax
	push	ecx
	fld	DWORD PTR __real@42200000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104323[ebp]
	call	??0b2Vec2@@QAE@MM@Z			; b2Vec2::b2Vec2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z	; b2Body::ApplyForce
$LN15@Control:
; Line 100
	lea	eax, DWORD PTR $T104324[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax+4]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN14@Control
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 3
	jne	SHORT $LN14@Control
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	jmp	SHORT $LN10@Control
$LN14@Control:
; Line 101
	lea	eax, DWORD PTR $T104325[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax+4]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN12@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN12@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Jump@CPlayer@@QAEXXZ			; CPlayer::Jump
	jmp	SHORT $LN10@Control
$LN12@Control:
; Line 102
	lea	eax, DWORD PTR $T104326[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax+4]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN10@Control
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN10@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Down@CPlayer@@QAEXXZ			; CPlayer::Down
$LN10@Control:
; Line 105
	mov	esi, esp
	push	39					; 00000027H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@Control
; Line 107
	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetFlip@CAnimSprite@@QAEX_N00@Z	; CAnimSprite::SetFlip
; Line 108
	lea	eax, DWORD PTR $T104327[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax]
	fcomp	QWORD PTR __real@3ff8000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN8@Control
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ ; b2Body::GetWorldCenter
	push	eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@40000000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104328[ebp]
	call	??0b2Vec2@@QAE@MM@Z			; b2Vec2::b2Vec2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z	; b2Body::ApplyForce
$LN8@Control:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN7@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Run@CPlayer@@QAEXXZ			; CPlayer::Run
$LN7@Control:
; Line 113
	jmp	$LN1@Control
$LN9@Control:
; Line 114
	mov	esi, esp
	push	37					; 00000025H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Control
; Line 116
	push	1
	push	0
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetFlip@CAnimSprite@@QAEX_N00@Z	; CAnimSprite::SetFlip
; Line 117
	lea	eax, DWORD PTR $T104329[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ; b2Body::GetLinearVelocity
	fld	DWORD PTR [eax]
	fcomp	QWORD PTR __real@bff8000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@Control
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ ; b2Body::GetWorldCenter
	push	eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@c0000000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104330[ebp]
	call	??0b2Vec2@@QAE@MM@Z			; b2Vec2::b2Vec2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z	; b2Body::ApplyForce
$LN4@Control:
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN3@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Run@CPlayer@@QAEXXZ			; CPlayer::Run
$LN3@Control:
; Line 122
	jmp	SHORT $LN1@Control
$LN5@Control:
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN1@Control
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Stand@CPlayer@@QAEXXZ			; CPlayer::Stand
$LN1@Control:
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Control@CPlayer@@QAEXXZ ENDP				; CPlayer::Control
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0b2Vec2@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0b2Vec2@@QAE@MM@Z PROC				; b2Vec2::b2Vec2, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0b2Vec2@@QAE@MM@Z ENDP				; b2Vec2::b2Vec2
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ PROC		; b2Body::GetWorldCenter, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
; Line 486
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWorldCenter@b2Body@@QBEABUb2Vec2@@XZ ENDP		; b2Body::GetWorldCenter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ PROC	; b2Body::GetLinearVelocity, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 510
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR [eax+68]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 511
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetLinearVelocity@b2Body@@QBE?AUb2Vec2@@XZ ENDP	; b2Body::GetLinearVelocity
_TEXT	ENDS
PUBLIC	?b2Cross@@YAMABUb2Vec2@@0@Z			; b2Cross
PUBLIC	??G@YA?AUb2Vec2@@ABU0@0@Z			; operator-
PUBLIC	??Yb2Vec2@@QAEXABU0@@Z				; b2Vec2::operator+=
PUBLIC	?SetAwake@b2Body@@QAEX_N@Z			; b2Body::SetAwake
PUBLIC	?IsAwake@b2Body@@QBE_NXZ			; b2Body::IsAwake
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z
_TEXT	SEGMENT
$T104351 = -216						; size = 8
_this$ = -8						; size = 4
_force$ = 8						; size = 4
_point$ = 12						; size = 4
?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z PROC		; b2Body::ApplyForce, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN2@ApplyForce
; Line 749
	jmp	SHORT $LN3@ApplyForce
$LN2@ApplyForce:
; Line 752
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAwake@b2Body@@QBE_NXZ		; b2Body::IsAwake
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@ApplyForce
; Line 754
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAwake@b2Body@@QAEX_N@Z		; b2Body::SetAwake
$LN1@ApplyForce:
; Line 757
	mov	eax, DWORD PTR _force$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??Yb2Vec2@@QAEXABU0@@Z			; b2Vec2::operator+=
; Line 758
	mov	eax, DWORD PTR _force$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	edx, DWORD PTR _point$[ebp]
	push	edx
	lea	eax, DWORD PTR $T104351[ebp]
	push	eax
	call	??G@YA?AUb2Vec2@@ABU0@0@Z		; operator-
	add	esp, 12					; 0000000cH
	push	eax
	call	?b2Cross@@YAMABUb2Vec2@@0@Z		; b2Cross
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [ecx+84]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+84]
$LN3@ApplyForce:
; Line 759
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ApplyForce@b2Body@@QAEXABUb2Vec2@@0@Z ENDP		; b2Body::ApplyForce
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??Yb2Vec2@@QAEXABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??Yb2Vec2@@QAEXABU0@@Z PROC				; b2Vec2::operator+=, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+4]
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??Yb2Vec2@@QAEXABU0@@Z ENDP				; b2Vec2::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?b2Cross@@YAMABUb2Vec2@@0@Z
_TEXT	SEGMENT
tv78 = -196						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?b2Cross@@YAMABUb2Vec2@@0@Z PROC			; b2Cross, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 425
	mov	eax, DWORD PTR _a$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _b$[ebp]
	fmul	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _a$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _b$[ebp]
	fmul	DWORD PTR [eax]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR tv78[ebp]
	fld	DWORD PTR tv78[ebp]
; Line 426
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?b2Cross@@YAMABUb2Vec2@@0@Z ENDP			; b2Cross
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??G@YA?AUb2Vec2@@ABU0@0@Z
_TEXT	SEGMENT
tv82 = -200						; size = 4
tv79 = -196						; size = 4
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
??G@YA?AUb2Vec2@@ABU0@0@Z PROC				; operator-, COMDAT
; Line 464
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 465
	mov	eax, DWORD PTR _a$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _b$[ebp]
	fsub	DWORD PTR [ecx+4]
	fstp	DWORD PTR tv79[ebp]
	fld	DWORD PTR tv79[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _a$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR _b$[ebp]
	fsub	DWORD PTR [eax]
	fstp	DWORD PTR tv82[ebp]
	fld	DWORD PTR tv82[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0b2Vec2@@QAE@MM@Z			; b2Vec2::b2Vec2
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 466
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??G@YA?AUb2Vec2@@ABU0@0@Z ENDP				; operator-
_TEXT	ENDS
PUBLIC	?SetZero@b2Vec2@@QAEXXZ				; b2Vec2::SetZero
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAwake@b2Body@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_flag$ = 8						; size = 1
?SetAwake@b2Body@@QAEX_N@Z PROC				; b2Body::SetAwake, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
; Line 628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 629
	movzx	eax, BYTE PTR _flag$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetAwake
; Line 631
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	jne	SHORT $LN2@SetAwake
; Line 633
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+144]
$LN2@SetAwake:
; Line 637
	jmp	SHORT $LN1@SetAwake
$LN3@SetAwake:
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+144]
; Line 641
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?SetZero@b2Vec2@@QAEXXZ			; b2Vec2::SetZero
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+72]
; Line 643
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?SetZero@b2Vec2@@QAEXXZ			; b2Vec2::SetZero
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+84]
$LN1@SetAwake:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAwake@b2Body@@QAEX_N@Z ENDP				; b2Body::SetAwake
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetZero@b2Vec2@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetZero@b2Vec2@@QAEXXZ PROC				; b2Vec2::SetZero, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetZero@b2Vec2@@QAEXXZ ENDP				; b2Vec2::SetZero
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsAwake@b2Body@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsAwake@b2Body@@QBE_NXZ PROC				; b2Body::IsAwake, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\dynamics\b2body.h
; Line 649
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	xor	eax, eax
	cmp	ecx, 2
	sete	al
; Line 651
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAwake@b2Body@@QBE_NXZ ENDP				; b2Body::IsAwake
_TEXT	ENDS
PUBLIC	?GetPos@CPlayer@@QAE?AUD3DXVECTOR3@@XZ		; CPlayer::GetPos
EXTRN	?GetPos@CSprite@@QAE?AUD3DXVECTOR3@@XZ:PROC	; CSprite::GetPos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetPos@CPlayer@@QAE?AUD3DXVECTOR3@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPos@CPlayer@@QAE?AUD3DXVECTOR3@@XZ PROC		; CPlayer::GetPos, COMDAT
; _this$ = ecx
; File d:\mycodes\chaosfighter\trunk\chaosfighter\hgegame\player\player.cpp
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPos@CSprite@@QAE?AUD3DXVECTOR3@@XZ	; CSprite::GetPos
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPos@CPlayer@@QAE?AUD3DXVECTOR3@@XZ ENDP		; CPlayer::GetPos
_TEXT	ENDS
END
