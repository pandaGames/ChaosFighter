; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\毕业设计\项目\ChaosFighter\HGEGame\HGEFramework\DebugDraw.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??1b2Draw@@UAE@XZ				; b2Draw::~b2Draw
PUBLIC	??_7CDebugDraw@@6B@				; CDebugDraw::`vftable'
PUBLIC	??0CDebugDraw@@QAE@PAVHGE@@@Z			; CDebugDraw::CDebugDraw
PUBLIC	??_R4CDebugDraw@@6B@				; CDebugDraw::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDebugDraw@@@8				; CDebugDraw `RTTI Type Descriptor'
PUBLIC	??_R3CDebugDraw@@8				; CDebugDraw::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDebugDraw@@8				; CDebugDraw::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDebugDraw@@8			; CDebugDraw::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@b2Draw@@8				; b2Draw::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVb2Draw@@@8				; b2Draw `RTTI Type Descriptor'
PUBLIC	??_R3b2Draw@@8					; b2Draw::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2b2Draw@@8					; b2Draw::`RTTI Base Class Array'
PUBLIC	?DrawPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z ; CDebugDraw::DrawPolygon
PUBLIC	?DrawSolidPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z ; CDebugDraw::DrawSolidPolygon
PUBLIC	?DrawCircle@CDebugDraw@@UAEXABUb2Vec2@@MABUb2Color@@@Z ; CDebugDraw::DrawCircle
PUBLIC	?DrawSolidCircle@CDebugDraw@@UAEXABUb2Vec2@@M0ABUb2Color@@@Z ; CDebugDraw::DrawSolidCircle
PUBLIC	?DrawSegment@CDebugDraw@@UAEXABUb2Vec2@@0ABUb2Color@@@Z ; CDebugDraw::DrawSegment
PUBLIC	?DrawTransform@CDebugDraw@@UAEXABUb2Transform@@@Z ; CDebugDraw::DrawTransform
EXTRN	?SetFlags@b2Draw@@QAEXI@Z:PROC			; b2Draw::SetFlags
EXTRN	??0b2Draw@@QAE@XZ:PROC				; b2Draw::b2Draw
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECDebugDraw@@UAEPAXI@Z:PROC			; CDebugDraw::`vector deleting destructor'
;	COMDAT ??_R2b2Draw@@8
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\debugdraw.cpp
rdata$r	SEGMENT
??_R2b2Draw@@8 DD FLAT:??_R1A@?0A@EA@b2Draw@@8		; b2Draw::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3b2Draw@@8
rdata$r	SEGMENT
??_R3b2Draw@@8 DD 00H					; b2Draw::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2b2Draw@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVb2Draw@@@8
_DATA	SEGMENT
??_R0?AVb2Draw@@@8 DD FLAT:??_7type_info@@6B@		; b2Draw `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVb2Draw@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@b2Draw@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@b2Draw@@8 DD FLAT:??_R0?AVb2Draw@@@8	; b2Draw::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3b2Draw@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDebugDraw@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDebugDraw@@8 DD FLAT:??_R0?AVCDebugDraw@@@8 ; CDebugDraw::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDebugDraw@@8
rdata$r	ENDS
;	COMDAT ??_R2CDebugDraw@@8
rdata$r	SEGMENT
??_R2CDebugDraw@@8 DD FLAT:??_R1A@?0A@EA@CDebugDraw@@8	; CDebugDraw::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@b2Draw@@8
rdata$r	ENDS
;	COMDAT ??_R3CDebugDraw@@8
rdata$r	SEGMENT
??_R3CDebugDraw@@8 DD 00H				; CDebugDraw::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDebugDraw@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDebugDraw@@@8
_DATA	SEGMENT
??_R0?AVCDebugDraw@@@8 DD FLAT:??_7type_info@@6B@	; CDebugDraw `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDebugDraw@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDebugDraw@@6B@
rdata$r	SEGMENT
??_R4CDebugDraw@@6B@ DD 00H				; CDebugDraw::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDebugDraw@@@8
	DD	FLAT:??_R3CDebugDraw@@8
rdata$r	ENDS
;	COMDAT ??_7CDebugDraw@@6B@
CONST	SEGMENT
??_7CDebugDraw@@6B@ DD FLAT:??_R4CDebugDraw@@6B@	; CDebugDraw::`vftable'
	DD	FLAT:??_ECDebugDraw@@UAEPAXI@Z
	DD	FLAT:?DrawPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z
	DD	FLAT:?DrawSolidPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z
	DD	FLAT:?DrawCircle@CDebugDraw@@UAEXABUb2Vec2@@MABUb2Color@@@Z
	DD	FLAT:?DrawSolidCircle@CDebugDraw@@UAEXABUb2Vec2@@M0ABUb2Color@@@Z
	DD	FLAT:?DrawSegment@CDebugDraw@@UAEXABUb2Vec2@@0ABUb2Color@@@Z
	DD	FLAT:?DrawTransform@CDebugDraw@@UAEXABUb2Transform@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDebugDraw@@QAE@PAVHGE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDebugDraw@@QAE@PAVHGE@@@Z$0
__ehfuncinfo$??0CDebugDraw@@QAE@PAVHGE@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDebugDraw@@QAE@PAVHGE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CDebugDraw@@QAE@PAVHGE@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pHge$ = 8						; size = 4
??0CDebugDraw@@QAE@PAVHGE@@@Z PROC			; CDebugDraw::CDebugDraw, COMDAT
; _this$ = ecx
; Line 5
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDebugDraw@@QAE@PAVHGE@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0b2Draw@@QAE@XZ			; b2Draw::b2Draw
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDebugDraw@@6B@
; Line 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pHge$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 10
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFlags@b2Draw@@QAEXI@Z		; b2Draw::SetFlags
; Line 14
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDebugDraw@@QAE@PAVHGE@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1b2Draw@@UAE@XZ			; b2Draw::~b2Draw
__ehhandler$??0CDebugDraw@@QAE@PAVHGE@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDebugDraw@@QAE@PAVHGE@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDebugDraw@@QAE@PAVHGE@@@Z ENDP			; CDebugDraw::CDebugDraw
PUBLIC	??_7b2Draw@@6B@					; b2Draw::`vftable'
PUBLIC	??_R4b2Draw@@6B@				; b2Draw::`RTTI Complete Object Locator'
EXTRN	??_Eb2Draw@@UAEPAXI@Z:PROC			; b2Draw::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R4b2Draw@@6B@
; File d:\program files\box2d\box2d\box2d\box2d\common\b2draw.h
rdata$r	SEGMENT
??_R4b2Draw@@6B@ DD 00H					; b2Draw::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVb2Draw@@@8
	DD	FLAT:??_R3b2Draw@@8
rdata$r	ENDS
;	COMDAT ??_7b2Draw@@6B@
CONST	SEGMENT
??_7b2Draw@@6B@ DD FLAT:??_R4b2Draw@@6B@		; b2Draw::`vftable'
	DD	FLAT:??_Eb2Draw@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1b2Draw@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1b2Draw@@UAE@XZ PROC					; b2Draw::~b2Draw, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7b2Draw@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1b2Draw@@UAE@XZ ENDP					; b2Draw::~b2Draw
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gb2Draw@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gb2Draw@@UAEPAXI@Z PROC				; b2Draw::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2Draw@@UAE@XZ			; b2Draw::~b2Draw
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gb2Draw@@UAEPAXI@Z ENDP				; b2Draw::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CDebugDraw@@UAE@XZ				; CDebugDraw::~CDebugDraw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCDebugDraw@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCDebugDraw@@UAEPAXI@Z PROC				; CDebugDraw::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDebugDraw@@UAE@XZ			; CDebugDraw::~CDebugDraw
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDebugDraw@@UAEPAXI@Z ENDP				; CDebugDraw::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1CDebugDraw@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDebugDraw@@UAE@XZ PROC				; CDebugDraw::~CDebugDraw, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\debugdraw.cpp
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDebugDraw@@6B@
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1b2Draw@@UAE@XZ			; b2Draw::~b2Draw
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDebugDraw@@UAE@XZ ENDP				; CDebugDraw::~CDebugDraw
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vertices$ = 8						; size = 4
_vertexCount$ = 12					; size = 4
_color$ = 16						; size = 4
?DrawPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z PROC ; CDebugDraw::DrawPolygon, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 34
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z ENDP ; CDebugDraw::DrawPolygon
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawSolidPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z
_TEXT	SEGMENT
_i$99216 = -20						; size = 4
_this$ = -8						; size = 4
_vertices$ = 8						; size = 4
_vertexCount$ = 12					; size = 4
_color$ = 16						; size = 4
?DrawSolidPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z PROC ; CDebugDraw::DrawSolidPolygon, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	mov	DWORD PTR _i$99216[ebp], 0
	jmp	SHORT $LN5@DrawSolidP
$LN4@DrawSolidP:
	mov	eax, DWORD PTR _i$99216[ebp]
	add	eax, 1
	mov	DWORD PTR _i$99216[ebp], eax
$LN5@DrawSolidP:
	mov	eax, DWORD PTR _i$99216[ebp]
	cmp	eax, DWORD PTR _vertexCount$[ebp]
	jge	SHORT $LN6@DrawSolidP
; Line 39
	mov	eax, DWORD PTR _vertexCount$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$99216[ebp], eax
	jge	SHORT $LN2@DrawSolidP
; Line 41
	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$99216[ebp]
	mov	edx, DWORD PTR _vertices$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8+8]
	push	eax
	mov	ecx, DWORD PTR _i$99216[ebp]
	mov	edx, DWORD PTR _vertices$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 43
	jmp	SHORT $LN1@DrawSolidP
$LN2@DrawSolidP:
; Line 45
	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _vertices$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$99216[ebp]
	mov	eax, DWORD PTR _vertices$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DrawSolidP:
; Line 47
	jmp	SHORT $LN4@DrawSolidP
$LN6@DrawSolidP:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawSolidPolygon@CDebugDraw@@UAEXPBUb2Vec2@@HABUb2Color@@@Z ENDP ; CDebugDraw::DrawSolidPolygon
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawCircle@CDebugDraw@@UAEXABUb2Vec2@@MABUb2Color@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_center$ = 8						; size = 4
_radius$ = 12						; size = 4
_color$ = 16						; size = 4
?DrawCircle@CDebugDraw@@UAEXABUb2Vec2@@MABUb2Color@@@Z PROC ; CDebugDraw::DrawCircle, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawCircle@CDebugDraw@@UAEXABUb2Vec2@@MABUb2Color@@@Z ENDP ; CDebugDraw::DrawCircle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawSolidCircle@CDebugDraw@@UAEXABUb2Vec2@@M0ABUb2Color@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_center$ = 8						; size = 4
_radius$ = 12						; size = 4
_axis$ = 16						; size = 4
_color$ = 20						; size = 4
?DrawSolidCircle@CDebugDraw@@UAEXABUb2Vec2@@M0ABUb2Color@@@Z PROC ; CDebugDraw::DrawSolidCircle, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawSolidCircle@CDebugDraw@@UAEXABUb2Vec2@@M0ABUb2Color@@@Z ENDP ; CDebugDraw::DrawSolidCircle
_TEXT	ENDS
PUBLIC	__real@3f000000
PUBLIC	?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z ; CDebugDraw::WorldToScreen
PUBLIC	??0b2Vec2@@QAE@XZ				; b2Vec2::b2Vec2
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?DrawSegment@CDebugDraw@@UAEXABUb2Vec2@@0ABUb2Color@@@Z
_TEXT	SEGMENT
_dColor$ = -52						; size = 4
_s2$ = -40						; size = 8
_s1$ = -24						; size = 8
_this$ = -8						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_color$ = 16						; size = 4
?DrawSegment@CDebugDraw@@UAEXABUb2Vec2@@0ABUb2Color@@@Z PROC ; CDebugDraw::DrawSegment, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	lea	ecx, DWORD PTR _s1$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _s2$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 60
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z ; CDebugDraw::WorldToScreen
; Line 61
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z ; CDebugDraw::WorldToScreen
; Line 62
	mov	DWORD PTR _dColor$[ebp], -16711936	; ff00ff00H
; Line 63
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _dColor$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _s2$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+344]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DrawSegmen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN6@DrawSegmen:
	DD	2
	DD	$LN5@DrawSegmen
$LN5@DrawSegmen:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@DrawSegmen
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN4@DrawSegmen
$LN4@DrawSegmen:
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN3@DrawSegmen:
	DB	115					; 00000073H
	DB	49					; 00000031H
	DB	0
?DrawSegment@CDebugDraw@@UAEXABUb2Vec2@@0ABUb2Color@@@Z ENDP ; CDebugDraw::DrawSegment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0b2Vec2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0b2Vec2@@QAE@XZ PROC					; b2Vec2::b2Vec2, COMDAT
; _this$ = ecx
; File d:\program files\box2d\box2d\box2d\box2d\common\b2math.h
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0b2Vec2@@QAE@XZ ENDP					; b2Vec2::b2Vec2
_TEXT	ENDS
PUBLIC	__real@4000000000000000
PUBLIC	?DrawPoint@CDebugDraw@@QAEXABUb2Vec2@@MABUb2Color@@@Z ; CDebugDraw::DrawPoint
;	COMDAT __real@4000000000000000
; File e:\毕业设计\项目\chaosfighter\hgegame\hgeframework\debugdraw.cpp
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?DrawPoint@CDebugDraw@@QAEXABUb2Vec2@@MABUb2Color@@@Z
_TEXT	SEGMENT
_s4$ = -72						; size = 8
_s3$ = -56						; size = 8
_s2$ = -40						; size = 8
_s1$ = -24						; size = 8
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_size$ = 12						; size = 4
_color$ = 16						; size = 4
?DrawPoint@CDebugDraw@@QAEXABUb2Vec2@@MABUb2Color@@@Z PROC ; CDebugDraw::DrawPoint, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	lea	ecx, DWORD PTR _s1$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _s2$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _s3$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
	lea	ecx, DWORD PTR _s4$[ebp]
	call	??0b2Vec2@@QAE@XZ			; b2Vec2::b2Vec2
; Line 68
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fsubr	DWORD PTR [eax]
	fstp	DWORD PTR _s1$[ebp]
; Line 69
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fsubr	DWORD PTR [eax+4]
	fstp	DWORD PTR _s1$[ebp+4]
; Line 70
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fadd	DWORD PTR [eax]
	fstp	DWORD PTR _s2$[ebp]
; Line 71
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fsubr	DWORD PTR [eax+4]
	fstp	DWORD PTR _s2$[ebp+4]
; Line 72
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fadd	DWORD PTR [eax]
	fstp	DWORD PTR _s3$[ebp]
; Line 73
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fadd	DWORD PTR [eax+4]
	fstp	DWORD PTR _s3$[ebp+4]
; Line 74
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fsubr	DWORD PTR [eax]
	fstp	DWORD PTR _s4$[ebp]
; Line 75
	fld	DWORD PTR _size$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	mov	eax, DWORD PTR _p$[ebp]
	fadd	DWORD PTR [eax+4]
	fstp	DWORD PTR _s4$[ebp+4]
; Line 76
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s2$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 77
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s3$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s3$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 78
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s4$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s4$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s3$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s3$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s1$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s4$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s4$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 80
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s3$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s3$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s1$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 81
	mov	esi, esp
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	push	-65536					; ffff0000H
	push	ecx
	fld	DWORD PTR _s4$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s4$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _s2$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DrawPoint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@DrawPoint:
	DD	4
	DD	$LN7@DrawPoint
$LN7@DrawPoint:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@DrawPoint
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN4@DrawPoint
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN5@DrawPoint
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN6@DrawPoint
$LN6@DrawPoint:
	DB	115					; 00000073H
	DB	52					; 00000034H
	DB	0
$LN5@DrawPoint:
	DB	115					; 00000073H
	DB	51					; 00000033H
	DB	0
$LN4@DrawPoint:
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN3@DrawPoint:
	DB	115					; 00000073H
	DB	49					; 00000031H
	DB	0
?DrawPoint@CDebugDraw@@QAEXABUb2Vec2@@MABUb2Color@@@Z ENDP ; CDebugDraw::DrawPoint
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawTransform@CDebugDraw@@UAEXABUb2Transform@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xf$ = 8						; size = 4
?DrawTransform@CDebugDraw@@UAEXABUb2Transform@@@Z PROC	; CDebugDraw::DrawTransform, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?DrawTransform@CDebugDraw@@UAEXABUb2Transform@@@Z ENDP	; CDebugDraw::DrawTransform
_TEXT	ENDS
EXTRN	?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z:PROC ; CGame::WorldToScreen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pOut$ = 8						; size = 4
_pIn$ = 12						; size = 4
?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z PROC ; CDebugDraw::WorldToScreen, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _pIn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOut$[ebp]
	push	ecx
	call	?WorldToScreen@CGame@@SAPAUb2Vec2@@PAU2@PBU2@@Z ; CGame::WorldToScreen
	add	esp, 8
; Line 91
	mov	eax, DWORD PTR _pOut$[ebp]
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WorldToScreen@CDebugDraw@@AAEPAUb2Vec2@@PAU2@PBU2@@Z ENDP ; CDebugDraw::WorldToScreen
_TEXT	ENDS
END
