; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\毕业设计\项目\ChaosFighter\HGEGame\Screen\MenuScreen.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
CONST	SEGMENT
_MeterPerPixel DD 03bc985f0r			; 0.00615
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__real@43aa8000
PUBLIC	__real@43850000
PUBLIC	__real@43b60000
PUBLIC	__real@43570000
PUBLIC	__real@42600000
PUBLIC	__real@43c50000
PUBLIC	__real@43240000
PUBLIC	??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@ ; `string'
PUBLIC	__real@42e00000
PUBLIC	__real@43480000
PUBLIC	__real@42380000
PUBLIC	??_C@_19MOHIIIBC@?$AAm?$AAe?$AAn?$AAu?$AA?$AA@	; `string'
PUBLIC	__real@44150000
PUBLIC	__real@43370000
PUBLIC	??_C@_1BC@MPJECIKM@?$AAb?$AAi?$AAg?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@ ; `string'
PUBLIC	__real@42200000
PUBLIC	__real@41b80000
PUBLIC	??_C@_1M@NFEAPLNL@?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??_C@_15KGOJFLP@?$AAB?$AAG?$AA?$AA@		; `string'
PUBLIC	__real@00000000
PUBLIC	__real@44480000
PUBLIC	__real@43f00000
PUBLIC	?InitTexture@CMenuScreen@@QAEXXZ		; CMenuScreen::InitTexture
PUBLIC	??_7CMenuScreen@@6B@				; CMenuScreen::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0CMenuScreen@@QAE@PAVCGame@@@Z		; CMenuScreen::CMenuScreen
PUBLIC	??_R4CMenuScreen@@6B@				; CMenuScreen::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMenuScreen@@@8				; CMenuScreen `RTTI Type Descriptor'
PUBLIC	??_R3CMenuScreen@@8				; CMenuScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMenuScreen@@8				; CMenuScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMenuScreen@@8			; CMenuScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	?Update@CMenuScreen@@UAEXM@Z			; CMenuScreen::Update
PUBLIC	?Render@CMenuScreen@@UAEXXZ			; CMenuScreen::Render
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?SetColor@hgeSprite@@QAEXKH@Z:PROC		; hgeSprite::SetColor
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z:PROC ; CSpriteManager::CreateSprite
EXTRN	__imp__srand:PROC
EXTRN	??0CScreen@@QAE@PAVCGame@@@Z:PROC		; CScreen::CScreen
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECMenuScreen@@UAEPAXI@Z:PROC			; CMenuScreen::`vector deleting destructor'
;	COMDAT ??_R2CScreen@@8
; File e:\毕业设计\项目\chaosfighter\hgegame\screen\menuscreen.cpp
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
_DATA	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMenuScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMenuScreen@@8 DD FLAT:??_R0?AVCMenuScreen@@@8 ; CMenuScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMenuScreen@@8
rdata$r	ENDS
;	COMDAT ??_R2CMenuScreen@@8
rdata$r	SEGMENT
??_R2CMenuScreen@@8 DD FLAT:??_R1A@?0A@EA@CMenuScreen@@8 ; CMenuScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R3CMenuScreen@@8
rdata$r	SEGMENT
??_R3CMenuScreen@@8 DD 00H				; CMenuScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMenuScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMenuScreen@@@8
_DATA	SEGMENT
??_R0?AVCMenuScreen@@@8 DD FLAT:??_7type_info@@6B@	; CMenuScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMenuScreen@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMenuScreen@@6B@
rdata$r	SEGMENT
??_R4CMenuScreen@@6B@ DD 00H				; CMenuScreen::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMenuScreen@@@8
	DD	FLAT:??_R3CMenuScreen@@8
rdata$r	ENDS
;	COMDAT __real@43aa8000
CONST	SEGMENT
__real@43aa8000 DD 043aa8000r			; 341
CONST	ENDS
;	COMDAT __real@43850000
CONST	SEGMENT
__real@43850000 DD 043850000r			; 266
CONST	ENDS
;	COMDAT __real@43b60000
CONST	SEGMENT
__real@43b60000 DD 043b60000r			; 364
CONST	ENDS
;	COMDAT __real@43570000
CONST	SEGMENT
__real@43570000 DD 043570000r			; 215
CONST	ENDS
;	COMDAT __real@42600000
CONST	SEGMENT
__real@42600000 DD 042600000r			; 56
CONST	ENDS
;	COMDAT __real@43c50000
CONST	SEGMENT
__real@43c50000 DD 043c50000r			; 394
CONST	ENDS
;	COMDAT __real@43240000
CONST	SEGMENT
__real@43240000 DD 043240000r			; 164
CONST	ENDS
;	COMDAT ??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@ DB 'm', 00H
	DB	'e', 00H, 'n', 00H, 'u', 00H, 'B', 00H, 't', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __real@42e00000
CONST	SEGMENT
__real@42e00000 DD 042e00000r			; 112
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@42380000
CONST	SEGMENT
__real@42380000 DD 042380000r			; 46
CONST	ENDS
;	COMDAT ??_C@_19MOHIIIBC@?$AAm?$AAe?$AAn?$AAu?$AA?$AA@
CONST	SEGMENT
??_C@_19MOHIIIBC@?$AAm?$AAe?$AAn?$AAu?$AA?$AA@ DB 'm', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT __real@44150000
CONST	SEGMENT
__real@44150000 DD 044150000r			; 596
CONST	ENDS
;	COMDAT __real@43370000
CONST	SEGMENT
__real@43370000 DD 043370000r			; 183
CONST	ENDS
;	COMDAT ??_C@_1BC@MPJECIKM@?$AAb?$AAi?$AAg?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@MPJECIKM@?$AAb?$AAi?$AAg?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@ DB 'b'
	DB	00H, 'i', 00H, 'g', 00H, 'A', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41b80000
CONST	SEGMENT
__real@41b80000 DD 041b80000r			; 23
CONST	ENDS
;	COMDAT ??_C@_1M@NFEAPLNL@?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@NFEAPLNL@?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$AA@ DB 't', 00H, 'i', 00H
	DB	't', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_15KGOJFLP@?$AAB?$AAG?$AA?$AA@
CONST	SEGMENT
??_C@_15KGOJFLP@?$AAB?$AAG?$AA?$AA@ DB 'B', 00H, 'G', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT ??_7CMenuScreen@@6B@
CONST	SEGMENT
??_7CMenuScreen@@6B@ DD FLAT:??_R4CMenuScreen@@6B@	; CMenuScreen::`vftable'
	DD	FLAT:??_ECMenuScreen@@UAEPAXI@Z
	DD	FLAT:?Update@CMenuScreen@@UAEXM@Z
	DD	FLAT:?Render@CMenuScreen@@UAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMenuScreen@@QAE@PAVCGame@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMenuScreen@@QAE@PAVCGame@@@Z$0
__ehfuncinfo$??0CMenuScreen@@QAE@PAVCGame@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMenuScreen@@QAE@PAVCGame@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CMenuScreen@@QAE@PAVCGame@@@Z
_TEXT	SEGMENT
$T106018 = -368						; size = 4
$T104995 = -356						; size = 12
$T104997 = -336						; size = 12
$T105001 = -316						; size = 12
$T105003 = -296						; size = 12
$T105005 = -276						; size = 12
$T105007 = -256						; size = 12
$T105008 = -236						; size = 12
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pGame$ = 8						; size = 4
??0CMenuScreen@@QAE@PAVCGame@@@Z PROC			; CMenuScreen::CMenuScreen, COMDAT
; _this$ = ecx
; Line 5
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMenuScreen@@QAE@PAVCGame@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pGame$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CScreen@@QAE@PAVCGame@@@Z		; CScreen::CScreen
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CMenuScreen@@6B@
; Line 6
	push	0
	call	_time
	add	esp, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__srand
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitTexture@CMenuScreen@@QAEXXZ	; CMenuScreen::InitTexture
; Line 8
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_15KGOJFLP@?$AAB?$AAG?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104995[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 9
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_1M@NFEAPLNL@?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T104997[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 11
	push	28					; 0000001cH
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T106018[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T106018[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx], -3002458		; ffd22fa6H
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+4], -10993680		; ff583ff0H
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+8], -1013		; fffffc0bH
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+12], -33269		; ffff7e0bH
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+16], -15994369		; ff0bf1ffH
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+20], -62611		; ffff0b6dH
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [ecx+24], -10006112		; ff6751a0H
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+48]
; Line 23
	push	ecx
	fld	DWORD PTR __real@41b80000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42200000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_1BC@MPJECIKM@?$AAb?$AAi?$AAg?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43370000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44150000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105001[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 25
	push	ecx
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_19MOHIIIBC@?$AAm?$AAe?$AAn?$AAu?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105003[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 26
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42e00000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43240000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43c50000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105005[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 27
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42600000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43570000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43b60000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105007[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 28
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43850000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43aa8000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T105008[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?CreateSprite@CSpriteManager@@QAEPAVCSprite@@UD3DXVECTOR3@@QA_WMMMM@Z ; CSpriteManager::CreateSprite
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 31
	push	-1
	push	-16777216				; ff000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 4
	call	?SetColor@hgeSprite@@QAEXKH@Z		; hgeSprite::SetColor
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMenuScreen@@QAE@PAVCGame@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CScreen@@UAE@XZ			; CScreen::~CScreen
__ehhandler$??0CMenuScreen@@QAE@PAVCGame@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMenuScreen@@QAE@PAVCGame@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMenuScreen@@QAE@PAVCGame@@@Z ENDP			; CMenuScreen::CMenuScreen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File d:\program files\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File d:\program files\microsoft visual studio 10.0\vc\include\time.inl
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	??1CMenuScreen@@UAE@XZ				; CMenuScreen::~CMenuScreen
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCMenuScreen@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCMenuScreen@@UAEPAXI@Z PROC				; CMenuScreen::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMenuScreen@@UAE@XZ			; CMenuScreen::~CMenuScreen
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCMenuScreen@@UAEPAXI@Z ENDP				; CMenuScreen::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1CMenuScreen@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CMenuScreen@@UAE@XZ PROC				; CMenuScreen::~CMenuScreen, COMDAT
; _this$ = ecx
; File e:\毕业设计\项目\chaosfighter\hgegame\screen\menuscreen.cpp
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CMenuScreen@@6B@
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CScreen@@UAE@XZ			; CScreen::~CScreen
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CMenuScreen@@UAE@XZ ENDP				; CMenuScreen::~CMenuScreen
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	?UpdateArrowsStatus@CMenuScreen@@AAEXXZ		; CMenuScreen::UpdateArrowsStatus
PUBLIC	?UpdateBtnStatus@CMenuScreen@@AAEXXZ		; CMenuScreen::UpdateBtnStatus
EXTRN	__imp__rand:PROC
EXTRN	?Update@CScreen@@UAEXM@Z:PROC			; CScreen::Update
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Update@CMenuScreen@@UAEXM@Z
_TEXT	SEGMENT
_Randnum$105025 = -20					; size = 4
_this$ = -8						; size = 4
_fDeltaTime$ = 8					; size = 4
?Update@CMenuScreen@@UAEXM@Z PROC			; CMenuScreen::Update, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	push	ecx
	fld	DWORD PTR _fDeltaTime$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CScreen@@UAEXM@Z		; CScreen::Update
; Line 42
	mov	esi, esp
	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+312]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Update
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+12], ecx
$LN2@Update:
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateBtnStatus@CMenuScreen@@AAEXXZ	; CMenuScreen::UpdateBtnStatus
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateArrowsStatus@CMenuScreen@@AAEXXZ	; CMenuScreen::UpdateArrowsStatus
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	fadd	DWORD PTR _fDeltaTime$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+48]
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	fcomp	QWORD PTR __real@3fe0000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN1@Update
; Line 54
	mov	esi, esp
	call	DWORD PTR __imp__rand
	cmp	esi, esp
	call	__RTC_CheckEsp
	cdq
	mov	ecx, 7
	idiv	ecx
	mov	DWORD PTR _Randnum$105025[ebp], edx
; Line 55
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _Randnum$105025[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, 4
	call	?SetColor@hgeSprite@@QAEXKH@Z		; hgeSprite::SetColor
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+48]
$LN1@Update:
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CMenuScreen@@UAEXM@Z ENDP			; CMenuScreen::Update
_TEXT	ENDS
EXTRN	?Render@CScreen@@UAEXXZ:PROC			; CScreen::Render
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Render@CMenuScreen@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Render@CMenuScreen@@UAEXXZ PROC			; CMenuScreen::Render, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render@CScreen@@UAEXXZ			; CScreen::Render
; Line 63
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Render@CMenuScreen@@UAEXXZ ENDP			; CMenuScreen::Render
_TEXT	ENDS
PUBLIC	??_C@_0CF@IHACOCMF@Resource?1Texture?1Menu?1title_gray@ ; `string'
PUBLIC	??_C@_0BP@IDNDMLFL@Resource?1Texture?1Menu?1menu?4png?$AA@ ; `string'
PUBLIC	??_C@_0CC@HCBPFMDA@Resource?1Texture?1Menu?1menuBtn?4pn@ ; `string'
PUBLIC	??_C@_1BG@JEEKMNCN@?$AAs?$AAm?$AAa?$AAl?$AAl?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CF@GCMPOFMA@Resource?1Texture?1Menu?1smallArrow@ ; `string'
PUBLIC	??_C@_0CD@GJKEKHLE@Resource?1Texture?1Menu?1bigArrow?4p@ ; `string'
PUBLIC	??_C@_0CB@PKPECEOD@Resource?1Texture?1Menu?1menuBg?4png@ ; `string'
EXTRN	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z:PROC ; CResourceManager::LoadTexture
;	COMDAT ??_C@_0CF@IHACOCMF@Resource?1Texture?1Menu?1title_gray@
CONST	SEGMENT
??_C@_0CF@IHACOCMF@Resource?1Texture?1Menu?1title_gray@ DB 'Resource/Text'
	DB	'ure/Menu/title_gray.png', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IDNDMLFL@Resource?1Texture?1Menu?1menu?4png?$AA@
CONST	SEGMENT
??_C@_0BP@IDNDMLFL@Resource?1Texture?1Menu?1menu?4png?$AA@ DB 'Resource/T'
	DB	'exture/Menu/menu.png', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HCBPFMDA@Resource?1Texture?1Menu?1menuBtn?4pn@
CONST	SEGMENT
??_C@_0CC@HCBPFMDA@Resource?1Texture?1Menu?1menuBtn?4pn@ DB 'Resource/Tex'
	DB	'ture/Menu/menuBtn.png', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JEEKMNCN@?$AAs?$AAm?$AAa?$AAl?$AAl?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@JEEKMNCN@?$AAs?$AAm?$AAa?$AAl?$AAl?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@ DB 's'
	DB	00H, 'm', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'A', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GCMPOFMA@Resource?1Texture?1Menu?1smallArrow@
CONST	SEGMENT
??_C@_0CF@GCMPOFMA@Resource?1Texture?1Menu?1smallArrow@ DB 'Resource/Text'
	DB	'ure/Menu/smallArrow.png', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GJKEKHLE@Resource?1Texture?1Menu?1bigArrow?4p@
CONST	SEGMENT
??_C@_0CD@GJKEKHLE@Resource?1Texture?1Menu?1bigArrow?4p@ DB 'Resource/Tex'
	DB	'ture/Menu/bigArrow.png', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PKPECEOD@Resource?1Texture?1Menu?1menuBg?4png@
CONST	SEGMENT
??_C@_0CB@PKPECEOD@Resource?1Texture?1Menu?1menuBg?4png@ DB 'Resource/Tex'
	DB	'ture/Menu/menuBg.png', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?InitTexture@CMenuScreen@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?InitTexture@CMenuScreen@@QAEXXZ PROC			; CMenuScreen::InitTexture, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	push	0
	push	0
	push	OFFSET ??_C@_0CB@PKPECEOD@Resource?1Texture?1Menu?1menuBg?4png@
	push	OFFSET ??_C@_15KGOJFLP@?$AAB?$AAG?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 68
	push	0
	push	0
	push	OFFSET ??_C@_0CD@GJKEKHLE@Resource?1Texture?1Menu?1bigArrow?4p@
	push	OFFSET ??_C@_1BC@MPJECIKM@?$AAb?$AAi?$AAg?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 69
	push	0
	push	0
	push	OFFSET ??_C@_0CF@GCMPOFMA@Resource?1Texture?1Menu?1smallArrow@
	push	OFFSET ??_C@_1BG@JEEKMNCN@?$AAs?$AAm?$AAa?$AAl?$AAl?$AAA?$AAr?$AAr?$AAo?$AAw?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 70
	push	0
	push	0
	push	OFFSET ??_C@_0CC@HCBPFMDA@Resource?1Texture?1Menu?1menuBtn?4pn@
	push	OFFSET ??_C@_1BA@NKMAGBIN@?$AAm?$AAe?$AAn?$AAu?$AAB?$AAt?$AAn?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 71
	push	0
	push	0
	push	OFFSET ??_C@_0BP@IDNDMLFL@Resource?1Texture?1Menu?1menu?4png?$AA@
	push	OFFSET ??_C@_19MOHIIIBC@?$AAm?$AAe?$AAn?$AAu?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 72
	push	0
	push	0
	push	OFFSET ??_C@_0CF@IHACOCMF@Resource?1Texture?1Menu?1title_gray@
	push	OFFSET ??_C@_1M@NFEAPLNL@?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+8]
	call	?LoadTexture@CResourceManager@@QAEXPB_WPBDK_N@Z ; CResourceManager::LoadTexture
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitTexture@CMenuScreen@@QAEXXZ ENDP			; CMenuScreen::InitTexture
_TEXT	ENDS
PUBLIC	__real@4073800000000000
PUBLIC	__real@4080e80000000000
PUBLIC	__real@4070a00000000000
PUBLIC	__real@4075500000000000
PUBLIC	__real@4070500000000000
PUBLIC	__real@4081a00000000000
PUBLIC	__real@406ae00000000000
PUBLIC	__real@4076c00000000000
PUBLIC	__real@43520000
PUBLIC	__real@406a400000000000
PUBLIC	__real@4082900000000000
PUBLIC	__real@4064800000000000
PUBLIC	__real@4078a00000000000
EXTRN	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z:PROC	; hgeSprite::SetTextureRect
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@4073800000000000
CONST	SEGMENT
__real@4073800000000000 DQ 04073800000000000r	; 312
CONST	ENDS
;	COMDAT __real@4080e80000000000
CONST	SEGMENT
__real@4080e80000000000 DQ 04080e80000000000r	; 541
CONST	ENDS
;	COMDAT __real@4070a00000000000
CONST	SEGMENT
__real@4070a00000000000 DQ 04070a00000000000r	; 266
CONST	ENDS
;	COMDAT __real@4075500000000000
CONST	SEGMENT
__real@4075500000000000 DQ 04075500000000000r	; 341
CONST	ENDS
;	COMDAT __real@4070500000000000
CONST	SEGMENT
__real@4070500000000000 DQ 04070500000000000r	; 261
CONST	ENDS
;	COMDAT __real@4081a00000000000
CONST	SEGMENT
__real@4081a00000000000 DQ 04081a00000000000r	; 564
CONST	ENDS
;	COMDAT __real@406ae00000000000
CONST	SEGMENT
__real@406ae00000000000 DQ 0406ae00000000000r	; 215
CONST	ENDS
;	COMDAT __real@4076c00000000000
CONST	SEGMENT
__real@4076c00000000000 DQ 04076c00000000000r	; 364
CONST	ENDS
;	COMDAT __real@43520000
CONST	SEGMENT
__real@43520000 DD 043520000r			; 210
CONST	ENDS
;	COMDAT __real@406a400000000000
CONST	SEGMENT
__real@406a400000000000 DQ 0406a400000000000r	; 210
CONST	ENDS
;	COMDAT __real@4082900000000000
CONST	SEGMENT
__real@4082900000000000 DQ 04082900000000000r	; 594
CONST	ENDS
;	COMDAT __real@4064800000000000
CONST	SEGMENT
__real@4064800000000000 DQ 04064800000000000r	; 164
CONST	ENDS
;	COMDAT __real@4078a00000000000
CONST	SEGMENT
__real@4078a00000000000 DQ 04078a00000000000r	; 394
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?UpdateBtnStatus@CMenuScreen@@AAEXXZ
_TEXT	SEGMENT
_posY$ = -32						; size = 4
_posX$ = -20						; size = 4
_this$ = -8						; size = 4
?UpdateBtnStatus@CMenuScreen@@AAEXXZ PROC		; CMenuScreen::UpdateBtnStatus, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	esi, esp
	lea	eax, DWORD PTR _posY$[ebp]
	push	eax
	lea	ecx, DWORD PTR _posX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR [eax+288]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 83
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4078a00000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN6@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@4064800000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN6@UpdateBtnS
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4082900000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN6@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@406a400000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN6@UpdateBtnS
; Line 85
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42e00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43520000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
	jmp	$LN1@UpdateBtnS
$LN6@UpdateBtnS:
; Line 88
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4076c00000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN4@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@406ae00000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN4@UpdateBtnS
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4081a00000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN4@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@4070500000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN4@UpdateBtnS
; Line 90
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42600000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43520000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
	jmp	$LN1@UpdateBtnS
$LN4@UpdateBtnS:
; Line 93
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4075500000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN2@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@4070a00000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN2@UpdateBtnS
	fld	DWORD PTR _posX$[ebp]
	fcomp	QWORD PTR __real@4080e80000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@UpdateBtnS
	fld	DWORD PTR _posY$[ebp]
	fcomp	QWORD PTR __real@4073800000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@UpdateBtnS
; Line 95
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43520000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
; Line 98
	jmp	$LN1@UpdateBtnS
$LN2@UpdateBtnS:
; Line 100
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42e00000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
; Line 101
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@42600000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
; Line 102
	push	1
	push	ecx
	fld	DWORD PTR __real@42380000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 4
	call	?SetTextureRect@hgeSprite@@QAEXMMMM_N@Z	; hgeSprite::SetTextureRect
$LN1@UpdateBtnS:
; Line 104
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UpdateBtnS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@UpdateBtnS:
	DD	2
	DD	$LN11@UpdateBtnS
$LN11@UpdateBtnS:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@UpdateBtnS
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@UpdateBtnS
$LN10@UpdateBtnS:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	89					; 00000059H
	DB	0
$LN9@UpdateBtnS:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	88					; 00000058H
	DB	0
?UpdateBtnStatus@CMenuScreen@@AAEXXZ ENDP		; CMenuScreen::UpdateBtnStatus
_TEXT	ENDS
PUBLIC	__real@c003eb851eb851ec
PUBLIC	__real@4014000000000000
PUBLIC	__real@408a900000000000
PUBLIC	__$ArrayPad$
EXTRN	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z:PROC	; CSprite::SetPos
EXTRN	?GetPos@CSprite@@QAE?AUD3DXVECTOR3@@XZ:PROC	; CSprite::GetPos
;	COMDAT __real@c003eb851eb851ec
CONST	SEGMENT
__real@c003eb851eb851ec DQ 0c003eb851eb851ecr	; -2.49
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@408a900000000000
CONST	SEGMENT
__real@408a900000000000 DQ 0408a900000000000r	; 850
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?UpdateArrowsStatus@CMenuScreen@@AAEXXZ
_TEXT	SEGMENT
_aPos$ = -32						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?UpdateArrowsStatus@CMenuScreen@@AAEXXZ PROC		; CMenuScreen::UpdateArrowsStatus, COMDAT
; _this$ = ecx
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	lea	eax, DWORD PTR _aPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+44]
	call	?GetPos@CSprite@@QAE?AUD3DXVECTOR3@@XZ	; CSprite::GetPos
; Line 112
	fld	DWORD PTR _aPos$[ebp]
	fcomp	QWORD PTR __real@408a900000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@UpdateArro
; Line 114
	fldz
	fstp	DWORD PTR _aPos$[ebp]
; Line 115
	fld	DWORD PTR __real@43f00000
	fstp	DWORD PTR _aPos$[ebp+4]
; Line 117
	jmp	SHORT $LN1@UpdateArro
$LN2@UpdateArro:
; Line 119
	fld	DWORD PTR _aPos$[ebp]
	fadd	QWORD PTR __real@4014000000000000
	fstp	DWORD PTR _aPos$[ebp]
; Line 120
	fld	DWORD PTR _aPos$[ebp+4]
	fadd	QWORD PTR __real@c003eb851eb851ec
	fstp	DWORD PTR _aPos$[ebp+4]
$LN1@UpdateArro:
; Line 123
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _aPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _aPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _aPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+44]
	call	?SetPos@CSprite@@QAEXUD3DXVECTOR3@@@Z	; CSprite::SetPos
; Line 124
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@UpdateArro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@UpdateArro:
	DD	1
	DD	$LN6@UpdateArro
$LN6@UpdateArro:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@UpdateArro
$LN5@UpdateArro:
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?UpdateArrowsStatus@CMenuScreen@@AAEXXZ ENDP		; CMenuScreen::UpdateArrowsStatus
_TEXT	ENDS
END
